import { RawShaderMaterial, Uniform, Vector2, DataArrayTexture } from 'three';
export interface ShadowResolveMaterialParameters {
    inputBuffer?: DataArrayTexture | null;
    historyBuffer?: DataArrayTexture | null;
}
export interface ShadowResolveMaterialUniforms {
    [key: string]: Uniform<unknown>;
    inputBuffer: Uniform<DataArrayTexture | null>;
    historyBuffer: Uniform<DataArrayTexture | null>;
    texelSize: Uniform<Vector2>;
    varianceGamma: Uniform<number>;
    temporalAlpha: Uniform<number>;
}
export declare class ShadowResolveMaterial extends RawShaderMaterial {
    uniforms: ShadowResolveMaterialUniforms;
    constructor({ inputBuffer, historyBuffer }?: ShadowResolveMaterialParameters);
    setSize(width: number, height: number): void;
    cascadeCount: number;
}
