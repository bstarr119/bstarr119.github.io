import { Data3DTexture, WebGLRenderer } from 'three';
import { ProceduralTexture } from './ProceduralTexture';
export type Procedural3DTexture = ProceduralTexture<Data3DTexture>;
export interface Procedural3DTextureBaseParameters {
    size: number;
    fragmentShader: string;
}
export declare class Procedural3DTextureBase implements Procedural3DTexture {
    readonly size: number;
    needsRender: boolean;
    private readonly material;
    private readonly mesh;
    private readonly renderTarget;
    private readonly camera;
    constructor({ size, fragmentShader }: Procedural3DTextureBaseParameters);
    dispose(): void;
    render(renderer: WebGLRenderer, deltaTime?: number): void;
    get texture(): Data3DTexture;
}
