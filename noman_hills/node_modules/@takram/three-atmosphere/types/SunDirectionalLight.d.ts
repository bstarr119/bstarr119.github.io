import { DirectionalLight, Matrix4, Vector3, DataTexture } from 'three';
import { Ellipsoid } from '@takram/three-geospatial';
import { AtmosphereParameters } from './AtmosphereParameters';
export interface SunDirectionalLightParameters {
    transmittanceTexture?: DataTexture | null;
    ellipsoid?: Ellipsoid;
    correctAltitude?: boolean;
    photometric?: boolean;
    sunDirection?: Vector3;
    distance?: number;
}
export declare const sunDirectionalLightParametersDefaults: {
    ellipsoid: Ellipsoid;
    correctAltitude: true;
    photometric: true;
    distance: number;
};
export declare class SunDirectionalLight extends DirectionalLight {
    private readonly atmosphere;
    transmittanceTexture: DataTexture | null;
    ellipsoid: Ellipsoid;
    readonly ellipsoidCenter: Vector3;
    readonly ellipsoidMatrix: Matrix4;
    correctAltitude: boolean;
    photometric: boolean;
    readonly sunDirection: Vector3;
    distance: number;
    constructor(params?: SunDirectionalLightParameters, atmosphere?: AtmosphereParameters);
    update(): void;
}
