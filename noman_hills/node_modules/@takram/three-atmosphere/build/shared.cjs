"use strict";const vn=require("postprocessing"),d=require("three"),D=require("@takram/three-geospatial"),X0=require("@takram/three-geospatial/shaders"),j0=require("./shared2.cjs"),Zt=["solarIrradiance","sunAngularRadius","bottomRadius","topRadius","rayleighScattering","mieScattering","miePhaseFunctionG","muSMin","skyRadianceToLuminance","sunRadianceToLuminance","luminousEfficiency"];function Wt(t,e){if(e!=null)for(const n of Zt){const o=e[n];o!=null&&(t[n]instanceof d.Vector3?t[n].copy(o):t[n]=o)}}const $e=class $e{constructor(e){this.solarIrradiance=new d.Vector3(1.474,1.8504,1.91198),this.sunAngularRadius=.004675,this.bottomRadius=636e4,this.topRadius=642e4,this.rayleighScattering=new d.Vector3(.005802,.013558,.0331),this.mieScattering=new d.Vector3(.003996,.003996,.003996),this.miePhaseFunctionG=.8,this.muSMin=Math.cos(D.radians(120)),this.skyRadianceToLuminance=new d.Vector3(114974.916437,71305.954816,65310.548555),this.sunRadianceToLuminance=new d.Vector3(98242.786222,69954.398112,66475.012354),this.luminousEfficiency=new d.Vector3(.2126,.7152,.0722),this.skyRadianceToRelativeLuminance=new d.Vector3,this.sunRadianceToRelativeLuminance=new d.Vector3,Wt(this,e);const n=this.luminousEfficiency.dot(this.skyRadianceToLuminance);this.skyRadianceToRelativeLuminance.copy(this.skyRadianceToLuminance).divideScalar(n),this.sunRadianceToRelativeLuminance.copy(this.sunRadianceToLuminance).divideScalar(n)}};$e.DEFAULT=new $e;let oe=$e;const Me=64,De=16,je=32,qe=128,Ke=32,Je=8,Xn=Je*Ke,Yn=qe,fn=je,Ne=256,Ue=64,ce=1/1e3,Xt=100,$n="82e00c5222d6cbc222af69abdf6d3f4fc9f63030",Yt=`https://media.githubusercontent.com/media/takram-design-engineering/three-geospatial/${$n}/packages/atmosphere/assets`,$t=`https://media.githubusercontent.com/media/takram-design-engineering/three-geospatial/${$n}/packages/atmosphere/assets/stars.bin`,jt=new d.Vector3;function Qe(t,e,n,o,a=!0){const c=n.projectOnSurface(t,jt);return c!=null?n.getOsculatingSphereCenter(!a||c.lengthSq()<t.lengthSq()?c:t,e,o):o.setScalar(0)}const qt=`precision highp sampler2DArray;

#include "core/depth"
#include "core/math"
#include "core/packing"
#include "core/transform"
#ifdef HAS_SHADOW
#include "core/raySphereIntersection"
#include "core/cascadedShadowMaps"
#include "core/interleavedGradientNoise"
#include "core/vogelDisk"
#endif // HAS_SHADOW
#include "parameters"
#include "functions"
#include "sky"

uniform sampler2D normalBuffer;

uniform mat4 projectionMatrix;
uniform mat4 viewMatrix;
uniform mat4 inverseProjectionMatrix;
uniform mat4 inverseViewMatrix;
uniform float bottomRadius;
uniform vec3 ellipsoidCenter;
uniform mat4 inverseEllipsoidMatrix;
uniform vec3 sunDirection;
uniform vec3 moonDirection;
uniform float moonAngularRadius;
uniform float lunarRadianceScale;
uniform float irradianceScale;
uniform float idealSphereAlpha;

#ifdef HAS_OVERLAY
uniform sampler2D overlayBuffer;
#endif // HAS_OVERLAY

#ifdef HAS_SHADOW
uniform sampler2DArray shadowBuffer;
uniform vec2 shadowIntervals[SHADOW_CASCADE_COUNT];
uniform mat4 shadowMatrices[SHADOW_CASCADE_COUNT];
uniform mat4 inverseShadowMatrices[SHADOW_CASCADE_COUNT];
uniform float shadowFar;
uniform float shadowTopHeight;
uniform float shadowRadius;
uniform sampler3D stbnTexture;
uniform int frame;
#endif // HAS_SHADOW

#ifdef HAS_SHADOW_LENGTH
uniform sampler2D shadowLengthBuffer;
#endif // HAS_SHADOW_LENGTH

varying vec3 vCameraPosition;
varying vec3 vRayDirection;
varying vec3 vEllipsoidCenter;
varying vec3 vGeometryEllipsoidCenter;
varying vec3 vEllipsoidRadiiSquared;

vec3 readNormal(const vec2 uv) {
  #ifdef OCT_ENCODED_NORMAL
  return unpackVec2ToNormal(texture(normalBuffer, uv).xy);
  #else // OCT_ENCODED_NORMAL
  return 2.0 * texture(normalBuffer, uv).xyz - 1.0;
  #endif // OCT_ENCODED_NORMAL
}

void correctGeometricError(inout vec3 positionECEF, inout vec3 normalECEF) {
  // TODO: The error is pronounced at the edge of the ellipsoid due to the
  // large difference between the sphere position and the unprojected position
  // at the current fragment. Calculating the sphere position from the fragment
  // UV may resolve this.

  // Correct way is slerp, but this will be small-angle interpolation anyways.
  vec3 sphereNormal = normalize(positionECEF / vEllipsoidRadiiSquared);
  vec3 spherePosition = u_bottom_radius * sphereNormal;
  normalECEF = mix(normalECEF, sphereNormal, idealSphereAlpha);
  positionECEF = mix(positionECEF, spherePosition, idealSphereAlpha);
}

#if defined(SUN_IRRADIANCE) || defined(SKY_IRRADIANCE)

vec3 getSunSkyIrradiance(
  const vec3 positionECEF,
  const vec3 normal,
  const vec3 inputColor,
  const float sunTransmittance
) {
  // Assume lambertian BRDF. If both SUN_IRRADIANCE and SKY_IRRADIANCE are not
  // defined, regard the inputColor as radiance at the texel.
  vec3 albedo = inputColor * irradianceScale * RECIPROCAL_PI;
  vec3 skyIrradiance;
  vec3 sunIrradiance = GetSunAndSkyIrradiance(positionECEF, normal, sunDirection, skyIrradiance);

  #ifdef HAS_SHADOW
  sunIrradiance *= sunTransmittance;
  #endif // HAS_SHADOW

  #if defined(SUN_IRRADIANCE) && defined(SKY_IRRADIANCE)
  return albedo * (sunIrradiance + skyIrradiance);
  #elif defined(SUN_IRRADIANCE)
  return albedo * sunIrradiance;
  #elif defined(SKY_IRRADIANCE)
  return albedo * skyIrradiance;
  #endif // defined(SUN_IRRADIANCE) && defined(SKY_IRRADIANCE)
}

#endif // defined(SUN_IRRADIANCE) || defined(SKY_IRRADIANCE)

#if defined(TRANSMITTANCE) || defined(INSCATTER)

void applyTransmittanceInscatter(const vec3 positionECEF, float shadowLength, inout vec3 radiance) {
  vec3 transmittance;
  vec3 inscatter = GetSkyRadianceToPoint(
    vCameraPosition - vGeometryEllipsoidCenter,
    positionECEF,
    shadowLength,
    sunDirection,
    transmittance
  );
  #ifdef TRANSMITTANCE
  radiance = radiance * transmittance;
  #endif // TRANSMITTANCE
  #ifdef INSCATTER
  radiance = radiance + inscatter;
  #endif // INSCATTER
}

#endif // defined(TRANSMITTANCE) || defined(INSCATTER)

#ifdef HAS_SHADOW

float getSTBN() {
  ivec3 size = textureSize(stbnTexture, 0);
  vec3 scale = 1.0 / vec3(size);
  return texture(stbnTexture, vec3(gl_FragCoord.xy, float(frame % size.z)) * scale).r;
}

vec2 getShadowUv(const vec3 worldPosition, const int cascadeIndex) {
  vec4 clip = shadowMatrices[cascadeIndex] * vec4(worldPosition, 1.0);
  clip /= clip.w;
  return clip.xy * 0.5 + 0.5;
}

float getDistanceToShadowTop(const vec3 positionECEF) {
  // Distance to the top of the shadows along the sun direction, which matches
  // the ray origin of BSM.
  return raySphereSecondIntersection(
    positionECEF / METER_TO_LENGTH_UNIT, // TODO: Make units consistent
    sunDirection,
    vec3(0.0),
    bottomRadius + shadowTopHeight
  );
}

float readShadowOpticalDepth(const vec2 uv, const float distanceToTop, const int cascadeIndex) {
  // r: frontDepth, g: meanExtinction, b: maxOpticalDepth, a: maxOpticalDepthTail
  vec4 shadow = texture(shadowBuffer, vec3(uv, float(cascadeIndex)));
  // Omit adding maxOpticalDepthTail to avoid pronounced aliasing. Ground
  // shadow will be attenuated by inscatter anyways.
  return min(shadow.b, shadow.g * max(0.0, distanceToTop - shadow.r));
}

float sampleShadowOpticalDepthPCF(
  const vec3 worldPosition,
  const float distanceToTop,
  const float radius,
  const int cascadeIndex
) {
  vec2 uv = getShadowUv(worldPosition, cascadeIndex);
  if (uv.x < 0.0 || uv.x > 1.0 || uv.y < 0.0 || uv.y > 1.0) {
    return 0.0;
  }

  vec2 texelSize = vec2(1.0) / vec2(textureSize(shadowBuffer, 0).xy);
  float sum = 0.0;
  vec2 offset;
  #pragma unroll_loop_start
  for (int i = 0; i < 16; ++i) {
    #if UNROLLED_LOOP_INDEX < SHADOW_SAMPLE_COUNT
    offset = vogelDisk(
      UNROLLED_LOOP_INDEX,
      SHADOW_SAMPLE_COUNT,
      interleavedGradientNoise(gl_FragCoord.xy) * PI2
    );
    sum += readShadowOpticalDepth(uv + offset * radius * texelSize, distanceToTop, cascadeIndex);
    #endif // UNROLLED_LOOP_INDEX < SHADOW_SAMPLE_COUNT
  }
  #pragma unroll_loop_end
  return sum / float(SHADOW_SAMPLE_COUNT);
}

float sampleShadowOpticalDepth(
  const vec3 worldPosition,
  const vec3 positionECEF,
  const float radius,
  const float jitter
) {
  float distanceToTop = getDistanceToShadowTop(positionECEF);
  if (distanceToTop <= 0.0) {
    return 0.0;
  }
  int cascadeIndex = getFadedCascadeIndex(
    viewMatrix,
    worldPosition,
    shadowIntervals,
    cameraNear,
    shadowFar,
    jitter
  );
  return cascadeIndex >= 0
    ? sampleShadowOpticalDepthPCF(worldPosition, distanceToTop, radius, cascadeIndex)
    : 0.0;
}

float getShadowRadius(const vec3 worldPosition) {
  vec4 clip = shadowMatrices[0] * vec4(worldPosition, 1.0);
  clip /= clip.w;

  // Offset by 1px in each direction in shadow's clip coordinates.
  vec2 shadowSize = vec2(textureSize(shadowBuffer, 0));
  vec3 offset = vec3(2.0 / shadowSize, 0.0);
  vec4 clipX = clip + offset.xzzz;
  vec4 clipY = clip + offset.zyzz;

  // Convert back to world space.
  vec4 worldX = inverseShadowMatrices[0] * clipX;
  vec4 worldY = inverseShadowMatrices[0] * clipY;

  // Project into the main camera's clip space.
  mat4 viewProjectionMatrix = projectionMatrix * viewMatrix;
  vec4 projected = viewProjectionMatrix * vec4(worldPosition, 1.0);
  vec4 projectedX = viewProjectionMatrix * worldX;
  vec4 projectedY = viewProjectionMatrix * worldY;
  projected /= projected.w;
  projectedX /= projectedX.w;
  projectedY /= projectedY.w;

  // Take the mean of pixel sizes.
  vec2 center = (projected.xy * 0.5 + 0.5) * resolution;
  vec2 offsetX = (projectedX.xy * 0.5 + 0.5) * resolution;
  vec2 offsetY = (projectedY.xy * 0.5 + 0.5) * resolution;
  float size = max(length(offsetX - center), length(offsetY - center));

  return remapClamped(size, 10.0, 50.0, 0.0, shadowRadius);
}

#endif // HAS_SHADOW

void mainImage(const vec4 inputColor, const vec2 uv, out vec4 outputColor) {
  float shadowLength = 0.0;
  #ifdef HAS_SHADOW_LENGTH
  shadowLength = texture(shadowLengthBuffer, uv).r;
  #endif // HAS_SHADOW_LENGTH

  #ifdef HAS_OVERLAY
  vec4 overlay = texture(overlayBuffer, uv);
  if (overlay.a == 1.0) {
    outputColor = overlay;
    return;
  }
  #endif // HAS_OVERLAY

  float depth = readDepth(uv);
  if (depth >= 1.0 - 1e-7) {
    #ifdef SKY
    vec3 rayDirection = normalize(vRayDirection);
    outputColor.rgb = getSkyRadiance(
      vCameraPosition - vEllipsoidCenter,
      rayDirection,
      shadowLength,
      sunDirection,
      moonDirection,
      moonAngularRadius,
      lunarRadianceScale
    );
    outputColor.a = 1.0;
    #else // SKY
    outputColor = inputColor;
    #endif // SKY

    #ifdef HAS_OVERLAY
    outputColor.rgb = outputColor.rgb * (1.0 - overlay.a) + overlay.rgb;
    #endif // HAS_OVERLAY
    return;
  }
  depth = reverseLogDepth(depth, cameraNear, cameraFar);

  // Reconstruct position and normal in world space.
  vec3 viewPosition = screenToView(
    uv,
    depth,
    getViewZ(depth),
    projectionMatrix,
    inverseProjectionMatrix
  );
  vec3 viewNormal;
  #ifdef RECONSTRUCT_NORMAL
  vec3 dx = dFdx(viewPosition);
  vec3 dy = dFdy(viewPosition);
  viewNormal = normalize(cross(dx, dy));
  #else // RECONSTRUCT_NORMAL
  viewNormal = readNormal(uv);
  #endif // RECONSTRUCT_NORMAL

  vec3 worldPosition = (inverseViewMatrix * vec4(viewPosition, 1.0)).xyz;
  vec3 worldNormal = normalize(mat3(inverseViewMatrix) * viewNormal);
  mat3 rotation = mat3(inverseEllipsoidMatrix);
  vec3 positionECEF = rotation * worldPosition * METER_TO_LENGTH_UNIT - vGeometryEllipsoidCenter;
  vec3 normalECEF = rotation * worldNormal;

  #ifdef CORRECT_GEOMETRIC_ERROR
  correctGeometricError(positionECEF, normalECEF);
  #endif // CORRECT_GEOMETRIC_ERROR

  #ifdef HAS_SHADOW
  float stbn = getSTBN();
  float radius = getShadowRadius(worldPosition);
  float opticalDepth = sampleShadowOpticalDepth(worldPosition, positionECEF, radius, stbn);
  float sunTransmittance = exp(-opticalDepth);
  #else // HAS_SHADOW
  float sunTransmittance = 1.0;
  #endif // HAS_SHADOW

  vec3 radiance;
  #if defined(SUN_IRRADIANCE) || defined(SKY_IRRADIANCE)
  radiance = getSunSkyIrradiance(positionECEF, normalECEF, inputColor.rgb, sunTransmittance);
  #else // defined(SUN_IRRADIANCE) || defined(SKY_IRRADIANCE)
  radiance = inputColor.rgb;
  #endif // defined(SUN_IRRADIANCE) || defined(SKY_IRRADIANCE)

  #if defined(TRANSMITTANCE) || defined(INSCATTER)
  applyTransmittanceInscatter(positionECEF, shadowLength, radiance);
  #endif // defined(TRANSMITTANCE) || defined(INSCATTER)

  outputColor = vec4(radiance, inputColor.a);

  #ifdef HAS_OVERLAY
  outputColor.rgb = outputColor.rgb * (1.0 - overlay.a) + overlay.rgb;
  #endif // HAS_OVERLAY
}
`,Kt=`uniform mat4 inverseViewMatrix;
uniform mat4 inverseProjectionMatrix;
uniform vec3 cameraPosition;
uniform vec3 ellipsoidCenter;
uniform mat4 inverseEllipsoidMatrix;
uniform vec3 altitudeCorrection;
uniform vec3 ellipsoidRadii;
uniform float idealSphereAlpha;

varying vec3 vCameraPosition;
varying vec3 vRayDirection;
varying vec3 vEllipsoidCenter;
varying vec3 vGeometryEllipsoidCenter;
varying vec3 vEllipsoidRadiiSquared;

void getCameraRay(out vec3 origin, out vec3 direction) {
  bool isPerspective = inverseProjectionMatrix[2][3] != 0.0; // 4th entry in the 3rd column

  if (isPerspective) {
    // Calculate the camera ray for a perspective camera.
    vec4 viewPosition = inverseProjectionMatrix * vec4(position, 1.0);
    vec4 worldDirection = inverseViewMatrix * vec4(viewPosition.xyz, 0.0);
    origin = cameraPosition;
    direction = worldDirection.xyz;
  } else {
    // Unprojected points to calculate direction.
    vec4 nearPoint = inverseProjectionMatrix * vec4(position.xy, -1.0, 1.0);
    vec4 farPoint = inverseProjectionMatrix * vec4(position.xy, -0.9, 1.0);
    nearPoint /= nearPoint.w;
    farPoint /= farPoint.w;

    // Calculate world values.
    vec4 worldDirection = inverseViewMatrix * vec4(farPoint.xyz - nearPoint.xyz, 0.0);
    vec4 worldOrigin = inverseViewMatrix * nearPoint;

    // Outputs
    direction = worldDirection.xyz;
    origin = worldOrigin.xyz;
  }
}

void mainSupport() {
  vec3 direction, origin;
  getCameraRay(origin, direction);

  mat3 rotation = mat3(inverseEllipsoidMatrix);
  vCameraPosition = rotation * origin.xyz * METER_TO_LENGTH_UNIT;
  vRayDirection = rotation * direction.xyz;

  vEllipsoidCenter = (ellipsoidCenter + altitudeCorrection) * METER_TO_LENGTH_UNIT;
  #ifdef CORRECT_GEOMETRIC_ERROR
  // Gradually turn off altitude correction for aerial perspective as geometric
  // error correction takes effect.
  // See: https://github.com/takram-design-engineering/three-geospatial/pull/23#issuecomment-2542914656
  vGeometryEllipsoidCenter =
    (ellipsoidCenter + mix(altitudeCorrection, vec3(0.0), idealSphereAlpha)) * METER_TO_LENGTH_UNIT;
  #else
  vGeometryEllipsoidCenter = vEllipsoidCenter;
  #endif // CORRECT_GEOMETRIC_ERROR

  vec3 radii = ellipsoidRadii * METER_TO_LENGTH_UNIT;
  vEllipsoidRadiiSquared = radii * radii;
}
`,jn=`vec3 getLunarRadiance(const float moonAngularRadius) {
  // Not a physical number but the order of 10^-6 relative to the sun may fit.
  vec3 radiance = u_solar_irradiance * 0.000002 / (PI * moonAngularRadius * moonAngularRadius);
  #ifdef PHOTOMETRIC
  radiance *= SUN_SPECTRAL_RADIANCE_TO_LUMINANCE;
  #endif // PHOTOMETRIC
  return radiance;
}

float intersectSphere(const vec3 ray, const vec3 point, const float radius) {
  vec3 P = -point;
  float PoR = dot(P, ray);
  float D = dot(P, P) - radius * radius;
  return -PoR - sqrt(PoR * PoR - D);
}

float orenNayarDiffuse(const vec3 L, const vec3 V, const vec3 N) {
  float NoL = dot(N, L);
  float NoV = dot(N, V);
  float s = dot(L, V) - NoL * NoV;
  float t = mix(1.0, max(NoL, NoV), step(0.0, s));
  return max(0.0, NoL) * (0.62406015 + 0.41284404 * s / t);
}

vec3 getSkyRadiance(
  const vec3 cameraPosition,
  const vec3 rayDirection,
  float shadowLength,
  const vec3 sunDirection,
  const vec3 moonDirection,
  const float moonAngularRadius,
  const float lunarRadianceScale
) {
  vec3 transmittance;
  vec3 radiance = GetSkyRadiance(
    cameraPosition,
    rayDirection,
    shadowLength,
    sunDirection,
    transmittance
  );

  // Rendering celestial objects without perspective doesn't make sense.
  #ifdef PERSPECTIVE_CAMERA

  #if defined(SUN) || defined(MOON)
  vec3 ddx = dFdx(rayDirection);
  vec3 ddy = dFdy(rayDirection);
  float fragmentAngle = length(ddx + ddy) / length(rayDirection);
  #endif // defined(SUN) || defined(MOON)

  #ifdef SUN
  float viewDotSun = dot(rayDirection, sunDirection);
  if (viewDotSun > cos(u_sun_angular_radius)) {
    float angle = acos(clamp(viewDotSun, -1.0, 1.0));
    float antialias = smoothstep(u_sun_angular_radius, u_sun_angular_radius - fragmentAngle, angle);
    radiance += transmittance * GetSolarRadiance() * antialias;
  }
  #endif // SUN

  #ifdef MOON
  float intersection = intersectSphere(rayDirection, moonDirection, moonAngularRadius);
  if (intersection > 0.0) {
    vec3 normal = normalize(moonDirection - rayDirection * intersection);
    float diffuse = orenNayarDiffuse(-sunDirection, rayDirection, normal);
    float viewDotMoon = dot(rayDirection, moonDirection);
    float angle = acos(clamp(viewDotMoon, -1.0, 1.0));
    float antialias = smoothstep(moonAngularRadius, moonAngularRadius - fragmentAngle, angle);
    radiance +=
      transmittance *
      getLunarRadiance(moonAngularRadius) *
      lunarRadianceScale *
      diffuse *
      antialias;
  }
  #endif // MOON

  #endif // PERSPECTIVE_CAMERA

  return radiance;
}
`;var Jt=Object.defineProperty,M0=(t,e,n,o)=>{for(var a=void 0,c=t.length-1,l;c>=0;c--)(l=t[c])&&(a=l(e,n,a)||a);return a&&Jt(e,n,a),a};const Qt=new d.Vector3,er=new d.Vector3,nr=new D.Geodetic,qn={blendFunction:vn.BlendFunction.NORMAL,octEncodedNormal:!1,reconstructNormal:!1,ellipsoid:D.Ellipsoid.WGS84,correctAltitude:!0,correctGeometricError:!0,photometric:!0,sunIrradiance:!1,skyIrradiance:!1,transmittance:!0,inscatter:!0,irradianceScale:1,sky:!1,sun:!0,moon:!0,moonAngularRadius:.0045,lunarRadianceScale:1};class g0 extends vn.Effect{constructor(e=new d.Camera,n,o=oe.DEFAULT){const{blendFunction:a,normalBuffer:c=null,octEncodedNormal:l,reconstructNormal:v,irradianceTexture:u=null,scatteringTexture:E=null,transmittanceTexture:S=null,ellipsoid:g,correctAltitude:I,correctGeometricError:N,photometric:O,sunDirection:P,sunIrradiance:H,skyIrradiance:J,transmittance:t0,inscatter:r0,irradianceScale:c0,sky:E0,sun:l0,moon:h0,moonDirection:n0,moonAngularRadius:b0,lunarRadianceScale:K0}={...qn,...n};super("AerialPerspectiveEffect",D.unrollLoops(D.resolveIncludes(qt,{core:{depth:X0.depth,packing:X0.packing,math:X0.math,transform:X0.transform,raySphereIntersection:X0.raySphereIntersection,cascadedShadowMaps:X0.cascadedShadowMaps,interleavedGradientNoise:X0.interleavedGradientNoise,vogelDisk:X0.vogelDisk},parameters:j0._parameters,functions:j0._functions,sky:jn})),{blendFunction:a,vertexShader:D.resolveIncludes(Kt,{parameters:j0._parameters}),attributes:vn.EffectAttribute.DEPTH,uniforms:new Map(Object.entries({normalBuffer:new d.Uniform(c),projectionMatrix:new d.Uniform(new d.Matrix4),viewMatrix:new d.Uniform(new d.Matrix4),inverseProjectionMatrix:new d.Uniform(new d.Matrix4),inverseViewMatrix:new d.Uniform(new d.Matrix4),cameraPosition:new d.Uniform(new d.Vector3),bottomRadius:new d.Uniform(o.bottomRadius),ellipsoidRadii:new d.Uniform(new d.Vector3),ellipsoidCenter:new d.Uniform(new d.Vector3),inverseEllipsoidMatrix:new d.Uniform(new d.Matrix4),altitudeCorrection:new d.Uniform(new d.Vector3),sunDirection:new d.Uniform((P==null?void 0:P.clone())??new d.Vector3),irradianceScale:new d.Uniform(c0),idealSphereAlpha:new d.Uniform(0),moonDirection:new d.Uniform((n0==null?void 0:n0.clone())??new d.Vector3),moonAngularRadius:new d.Uniform(b0),lunarRadianceScale:new d.Uniform(K0),overlayBuffer:new d.Uniform(null),shadowBuffer:new d.Uniform(null),shadowMapSize:new d.Uniform(new d.Vector2),shadowIntervals:new d.Uniform([]),shadowMatrices:new d.Uniform([]),inverseShadowMatrices:new d.Uniform([]),shadowFar:new d.Uniform(0),shadowTopHeight:new d.Uniform(0),shadowRadius:new d.Uniform(3),stbnTexture:new d.Uniform(null),frame:new d.Uniform(0),shadowLengthBuffer:new d.Uniform(null),u_solar_irradiance:new d.Uniform(o.solarIrradiance),u_sun_angular_radius:new d.Uniform(o.sunAngularRadius),u_bottom_radius:new d.Uniform(o.bottomRadius*ce),u_top_radius:new d.Uniform(o.topRadius*ce),u_rayleigh_scattering:new d.Uniform(o.rayleighScattering),u_mie_scattering:new d.Uniform(o.mieScattering),u_mie_phase_function_g:new d.Uniform(o.miePhaseFunctionG),u_mu_s_min:new d.Uniform(o.muSMin),u_irradiance_texture:new d.Uniform(u),u_scattering_texture:new d.Uniform(E),u_single_mie_scattering_texture:new d.Uniform(E),u_transmittance_texture:new d.Uniform(S)})),defines:new Map([["TRANSMITTANCE_TEXTURE_WIDTH",Ne.toFixed(0)],["TRANSMITTANCE_TEXTURE_HEIGHT",Ue.toFixed(0)],["SCATTERING_TEXTURE_R_SIZE",je.toFixed(0)],["SCATTERING_TEXTURE_MU_SIZE",qe.toFixed(0)],["SCATTERING_TEXTURE_MU_S_SIZE",Ke.toFixed(0)],["SCATTERING_TEXTURE_NU_SIZE",Je.toFixed(0)],["IRRADIANCE_TEXTURE_WIDTH",Me.toFixed(0)],["IRRADIANCE_TEXTURE_HEIGHT",De.toFixed(0)],["METER_TO_LENGTH_UNIT",ce.toFixed(7)],["SUN_SPECTRAL_RADIANCE_TO_LUMINANCE",`vec3(${o.sunRadianceToRelativeLuminance.toArray().map(H0=>H0.toFixed(12)).join(",")})`],["SKY_SPECTRAL_RADIANCE_TO_LUMINANCE",`vec3(${o.skyRadianceToRelativeLuminance.toArray().map(H0=>H0.toFixed(12)).join(",")})`]])}),this.camera=e,this.atmosphere=o,this.ellipsoidMatrix=new d.Matrix4,this.overlay=null,this.shadow=null,this.shadowLength=null,this.shadowSampleCount=8,this.octEncodedNormal=l,this.reconstructNormal=v,this.ellipsoid=g,this.correctAltitude=I,this.correctGeometricError=N,this.photometric=O,this.sunIrradiance=H,this.skyIrradiance=J,this.transmittance=t0,this.inscatter=r0,this.sky=E0,this.sun=l0,this.moon=h0}get mainCamera(){return this.camera}set mainCamera(e){this.camera=e}copyCameraSettings(e){const{projectionMatrix:n,matrixWorldInverse:o,projectionMatrixInverse:a,matrixWorld:c}=e,l=this.uniforms;l.get("projectionMatrix").value.copy(n),l.get("viewMatrix").value.copy(o),l.get("inverseProjectionMatrix").value.copy(a),l.get("inverseViewMatrix").value.copy(c);const v=e.getWorldPosition(l.get("cameraPosition").value),u=l.get("inverseEllipsoidMatrix").value.copy(this.ellipsoidMatrix).invert(),E=Qt.copy(v).applyMatrix4(u).sub(l.get("ellipsoidCenter").value);try{const g=nr.setFromECEF(E).height,I=er.set(0,this.ellipsoid.maximumRadius,-g).applyMatrix4(n);l.get("idealSphereAlpha").value=D.saturate(D.remap(I.y,41.5,13.8,0,1))}catch{return}const S=l.get("altitudeCorrection");this.correctAltitude?Qe(E,this.atmosphere.bottomRadius,this.ellipsoid,S.value):S.value.setScalar(0)}updateComposition(){const{uniforms:e,defines:n,overlay:o,shadow:a,shadowLength:c}=this,l=n.has("HAS_OVERLAY"),v=o!=null;v!==l&&(v?n.set("HAS_OVERLAY","1"):(n.delete("HAS_OVERLAY"),e.get("overlayBuffer").value=null),this.setChanged()),v&&(e.get("overlayBuffer").value=o.map);const u=n.has("HAS_SHADOW"),E=a!=null;if(E!==u&&(E?n.set("HAS_SHADOW","1"):(n.delete("HAS_SHADOW"),e.get("shadowBuffer").value=null),this.setChanged()),E){const I=n.get("SHADOW_CASCADE_COUNT"),N=`${a.cascadeCount}`;I!==N&&(n.set("SHADOW_CASCADE_COUNT",a.cascadeCount.toFixed(0)),this.setChanged()),e.get("shadowBuffer").value=a.map,e.get("shadowMapSize").value=a.mapSize,e.get("shadowIntervals").value=a.intervals,e.get("shadowMatrices").value=a.matrices,e.get("inverseShadowMatrices").value=a.inverseMatrices,e.get("shadowFar").value=a.far,e.get("shadowTopHeight").value=a.topHeight}const S=n.has("HAS_SHADOW_LENGTH"),g=c!=null;g!==S&&(g?n.set("HAS_SHADOW_LENGTH","1"):(n.delete("HAS_SHADOW_LENGTH"),e.get("shadowLengthBuffer").value=null),this.setChanged()),g&&(e.get("shadowLengthBuffer").value=c.map)}update(e,n,o){this.copyCameraSettings(this.camera),this.updateComposition(),++this.uniforms.get("frame").value}get normalBuffer(){return this.uniforms.get("normalBuffer").value}set normalBuffer(e){this.uniforms.get("normalBuffer").value=e}get irradianceTexture(){return this.uniforms.get("u_irradiance_texture").value}set irradianceTexture(e){this.uniforms.get("u_irradiance_texture").value=e}get scatteringTexture(){return this.uniforms.get("u_scattering_texture").value}set scatteringTexture(e){this.uniforms.get("u_scattering_texture").value=e,this.uniforms.get("u_single_mie_scattering_texture").value=e}get transmittanceTexture(){return this.uniforms.get("u_transmittance_texture").value}set transmittanceTexture(e){this.uniforms.get("u_transmittance_texture").value=e}get ellipsoid(){return this._ellipsoid}set ellipsoid(e){this._ellipsoid=e,this.uniforms.get("ellipsoidRadii").value.copy(e.radii)}get ellipsoidCenter(){return this.uniforms.get("ellipsoidCenter").value}get sunDirection(){return this.uniforms.get("sunDirection").value}get irradianceScale(){return this.uniforms.get("irradianceScale").value}set irradianceScale(e){this.uniforms.get("irradianceScale").value=e}get moonDirection(){return this.uniforms.get("moonDirection").value}get moonAngularRadius(){return this.uniforms.get("moonAngularRadius").value}set moonAngularRadius(e){this.uniforms.get("moonAngularRadius").value=e}get lunarRadianceScale(){return this.uniforms.get("lunarRadianceScale").value}set lunarRadianceScale(e){this.uniforms.get("lunarRadianceScale").value=e}get stbnTexture(){return this.uniforms.get("stbnTexture").value}set stbnTexture(e){this.uniforms.get("stbnTexture").value=e}get shadowRadius(){return this.uniforms.get("shadowRadius").value}set shadowRadius(e){this.uniforms.get("shadowRadius").value=e}}M0([D.define("OCT_ENCODED_NORMAL")],g0.prototype,"octEncodedNormal");M0([D.define("RECONSTRUCT_NORMAL")],g0.prototype,"reconstructNormal");M0([D.define("CORRECT_GEOMETRIC_ERROR")],g0.prototype,"correctGeometricError");M0([D.define("PHOTOMETRIC")],g0.prototype,"photometric");M0([D.define("SUN_IRRADIANCE")],g0.prototype,"sunIrradiance");M0([D.define("SKY_IRRADIANCE")],g0.prototype,"skyIrradiance");M0([D.define("TRANSMITTANCE")],g0.prototype,"transmittance");M0([D.define("INSCATTER")],g0.prototype,"inscatter");M0([D.define("SKY")],g0.prototype,"sky");M0([D.define("SUN")],g0.prototype,"sun");M0([D.define("MOON")],g0.prototype,"moon");M0([D.defineInt("SHADOW_SAMPLE_COUNT",{min:1,max:16})],g0.prototype,"shadowSampleCount");var tr=Object.defineProperty,rr=(t,e,n,o)=>{for(var a=void 0,c=t.length-1,l;c>=0;c--)(l=t[c])&&(a=l(e,n,a)||a);return a&&tr(e,n,a),a};const ir=new d.Vector3;function or(t,e){let n="",o="";for(let a=1;a<e;++a)n+=`layout(location = ${a}) out float renderTarget${a};
`,o+=`renderTarget${a} = 0.0;
`;return t.replace("#include <mrt_layout>",n).replace("#include <mrt_output>",o)}const en={ellipsoid:D.Ellipsoid.WGS84,correctAltitude:!0,photometric:!0,renderTargetCount:1};class nn extends d.RawShaderMaterial{constructor(e,n=oe.DEFAULT){const{irradianceTexture:o=null,scatteringTexture:a=null,transmittanceTexture:c=null,ellipsoid:l,correctAltitude:v,photometric:u,sunDirection:E,sunAngularRadius:S,renderTargetCount:g,...I}={...en,...e};super({toneMapped:!1,depthWrite:!1,depthTest:!1,...I,uniforms:{cameraPosition:new d.Uniform(new d.Vector3),ellipsoidCenter:new d.Uniform(new d.Vector3),inverseEllipsoidMatrix:new d.Uniform(new d.Matrix4),altitudeCorrection:new d.Uniform(new d.Vector3),sunDirection:new d.Uniform((E==null?void 0:E.clone())??new d.Vector3),u_solar_irradiance:new d.Uniform(n.solarIrradiance),u_sun_angular_radius:new d.Uniform(S??n.sunAngularRadius),u_bottom_radius:new d.Uniform(n.bottomRadius*ce),u_top_radius:new d.Uniform(n.topRadius*ce),u_rayleigh_scattering:new d.Uniform(n.rayleighScattering),u_mie_scattering:new d.Uniform(n.mieScattering),u_mie_phase_function_g:new d.Uniform(n.miePhaseFunctionG),u_mu_s_min:new d.Uniform(n.muSMin),u_irradiance_texture:new d.Uniform(o),u_scattering_texture:new d.Uniform(a),u_single_mie_scattering_texture:new d.Uniform(a),u_transmittance_texture:new d.Uniform(c),...I.uniforms},defines:{PI:`${Math.PI}`,TRANSMITTANCE_TEXTURE_WIDTH:Ne.toFixed(0),TRANSMITTANCE_TEXTURE_HEIGHT:Ue.toFixed(0),SCATTERING_TEXTURE_R_SIZE:je.toFixed(0),SCATTERING_TEXTURE_MU_SIZE:qe.toFixed(0),SCATTERING_TEXTURE_MU_S_SIZE:Ke.toFixed(0),SCATTERING_TEXTURE_NU_SIZE:Je.toFixed(0),IRRADIANCE_TEXTURE_WIDTH:Me.toFixed(0),IRRADIANCE_TEXTURE_HEIGHT:De.toFixed(0),METER_TO_LENGTH_UNIT:ce.toFixed(7),SUN_SPECTRAL_RADIANCE_TO_LUMINANCE:`vec3(${n.sunRadianceToRelativeLuminance.toArray().map(N=>N.toFixed(12)).join(",")})`,SKY_SPECTRAL_RADIANCE_TO_LUMINANCE:`vec3(${n.skyRadianceToRelativeLuminance.toArray().map(N=>N.toFixed(12)).join(",")})`,...I.defines}}),this.atmosphere=n,this.ellipsoidMatrix=new d.Matrix4,this.atmosphere=n,this.ellipsoid=l,this.correctAltitude=v,this.photometric=u,this.renderTargetCount=g}copyCameraSettings(e){const n=this.uniforms,o=e.getWorldPosition(n.cameraPosition.value),a=n.inverseEllipsoidMatrix.value.copy(this.ellipsoidMatrix).invert(),c=ir.copy(o).applyMatrix4(a).sub(n.ellipsoidCenter.value),l=n.altitudeCorrection.value;this.correctAltitude?Qe(c,this.atmosphere.bottomRadius,this.ellipsoid,l):l.setScalar(0)}onBeforeCompile(e,n){e.fragmentShader=or(e.fragmentShader,this.renderTargetCount)}onBeforeRender(e,n,o,a,c,l){this.copyCameraSettings(o)}get irradianceTexture(){return this.uniforms.u_irradiance_texture.value}set irradianceTexture(e){this.uniforms.u_irradiance_texture.value=e}get scatteringTexture(){return this.uniforms.u_scattering_texture.value}set scatteringTexture(e){this.uniforms.u_scattering_texture.value=e,this.uniforms.u_single_mie_scattering_texture.value=e}get transmittanceTexture(){return this.uniforms.u_transmittance_texture.value}set transmittanceTexture(e){this.uniforms.u_transmittance_texture.value=e}get ellipsoidCenter(){return this.uniforms.ellipsoidCenter.value}get sunDirection(){return this.uniforms.sunDirection.value}get sunAngularRadius(){return this.uniforms.u_sun_angular_radius.value}set sunAngularRadius(e){this.uniforms.u_sun_angular_radius.value=e}get renderTargetCount(){return this._renderTargetCount}set renderTargetCount(e){e!==this.renderTargetCount&&(this._renderTargetCount=e,this.needsUpdate=!0)}}rr([D.define("PHOTOMETRIC")],nn.prototype,"photometric");/**
    @preserve

    Astronomy library for JavaScript (browser and Node.js).
    https://github.com/cosinekitty/astronomy

    MIT License

    Copyright (c) 2019-2023 Don Cross <cosinekitty@gmail.com>

    Permission is hereby granted, free of charge, to any person obtaining a copy
    of this software and associated documentation files (the "Software"), to deal
    in the Software without restriction, including without limitation the rights
    to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
    copies of the Software, and to permit persons to whom the Software is
    furnished to do so, subject to the following conditions:

    The above copyright notice and this permission notice shall be included in all
    copies or substantial portions of the Software.

    THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
    IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
    FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
    AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
    LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
    OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
    SOFTWARE.
*//**
 * @fileoverview Astronomy calculation library for browser scripting and Node.js.
 * @author Don Cross <cosinekitty@gmail.com>
 * @license MIT
 */const ar=173.1446326846693,sr=14959787069098932e-8,me=.017453292519943295,cr=365.24217,Fn=new Date("2000-01-01T12:00:00Z"),Y0=2*Math.PI,ne=3600*(180/Math.PI),fe=484813681109536e-20,lr=180*60*60,ur=2*lr,dr=6378.1366,vr=dr/sr,fr=81.30056,xn=.0002959122082855911,hn=2825345909524226e-22,pn=8459715185680659e-23,mn=1292024916781969e-23,En=1524358900784276e-23;function on(t){if(!Number.isFinite(t))throw console.trace(),`Value is not a finite number: ${t}`;return t}function ve(t){return t-Math.floor(t)}var k;(function(t){t.Sun="Sun",t.Moon="Moon",t.Mercury="Mercury",t.Venus="Venus",t.Earth="Earth",t.Mars="Mars",t.Jupiter="Jupiter",t.Saturn="Saturn",t.Uranus="Uranus",t.Neptune="Neptune",t.Pluto="Pluto",t.SSB="SSB",t.EMB="EMB",t.Star1="Star1",t.Star2="Star2",t.Star3="Star3",t.Star4="Star4",t.Star5="Star5",t.Star6="Star6",t.Star7="Star7",t.Star8="Star8"})(k||(k={}));const hr=[k.Star1,k.Star2,k.Star3,k.Star4,k.Star5,k.Star6,k.Star7,k.Star8],pr=[{ra:0,dec:0,dist:0},{ra:0,dec:0,dist:0},{ra:0,dec:0,dist:0},{ra:0,dec:0,dist:0},{ra:0,dec:0,dist:0},{ra:0,dec:0,dist:0},{ra:0,dec:0,dist:0},{ra:0,dec:0,dist:0}];function mr(t){const e=hr.indexOf(t);return e>=0?pr[e]:null}function Kn(t){const e=mr(t);return e&&e.dist>0?e:null}var q0;(function(t){t[t.From2000=0]="From2000",t[t.Into2000=1]="Into2000"})(q0||(q0={}));const he={Mercury:[[[[4.40250710144,0,0],[.40989414977,1.48302034195,26087.9031415742],[.050462942,4.47785489551,52175.8062831484],[.00855346844,1.16520322459,78263.70942472259],[.00165590362,4.11969163423,104351.61256629678],[.00034561897,.77930768443,130439.51570787099],[7583476e-11,3.71348404924,156527.41884944518]],[[26087.90313685529,0,0],[.01131199811,6.21874197797,26087.9031415742],[.00292242298,3.04449355541,52175.8062831484],[.00075775081,6.08568821653,78263.70942472259],[.00019676525,2.80965111777,104351.61256629678]]],[[[.11737528961,1.98357498767,26087.9031415742],[.02388076996,5.03738959686,52175.8062831484],[.01222839532,3.14159265359,0],[.0054325181,1.79644363964,78263.70942472259],[.0012977877,4.83232503958,104351.61256629678],[.00031866927,1.58088495658,130439.51570787099],[7963301e-11,4.60972126127,156527.41884944518]],[[.00274646065,3.95008450011,26087.9031415742],[.00099737713,3.14159265359,0]]],[[[.39528271651,0,0],[.07834131818,6.19233722598,26087.9031415742],[.00795525558,2.95989690104,52175.8062831484],[.00121281764,6.01064153797,78263.70942472259],[.00021921969,2.77820093972,104351.61256629678],[4354065e-11,5.82894543774,130439.51570787099]],[[.0021734774,4.65617158665,26087.9031415742],[.00044141826,1.42385544001,52175.8062831484]]]],Venus:[[[[3.17614666774,0,0],[.01353968419,5.59313319619,10213.285546211],[.00089891645,5.30650047764,20426.571092422],[5477194e-11,4.41630661466,7860.4193924392],[3455741e-11,2.6996444782,11790.6290886588],[2372061e-11,2.99377542079,3930.2096962196],[1317168e-11,5.18668228402,26.2983197998],[1664146e-11,4.25018630147,1577.3435424478],[1438387e-11,4.15745084182,9683.5945811164],[1200521e-11,6.15357116043,30639.856638633]],[[10213.28554621638,0,0],[.00095617813,2.4640651111,10213.285546211],[7787201e-11,.6247848222,20426.571092422]]],[[[.05923638472,.26702775812,10213.285546211],[.00040107978,1.14737178112,20426.571092422],[.00032814918,3.14159265359,0]],[[.00287821243,1.88964962838,10213.285546211]]],[[[.72334820891,0,0],[.00489824182,4.02151831717,10213.285546211],[1658058e-11,4.90206728031,20426.571092422],[1378043e-11,1.12846591367,11790.6290886588],[1632096e-11,2.84548795207,7860.4193924392],[498395e-11,2.58682193892,9683.5945811164],[221985e-11,2.01346696541,19367.1891622328],[237454e-11,2.55136053886,15720.8387848784]],[[.00034551041,.89198706276,10213.285546211]]]],Earth:[[[[1.75347045673,0,0],[.03341656453,4.66925680415,6283.0758499914],[.00034894275,4.62610242189,12566.1516999828],[3417572e-11,2.82886579754,3.523118349],[3497056e-11,2.74411783405,5753.3848848968],[3135899e-11,3.62767041756,77713.7714681205],[2676218e-11,4.41808345438,7860.4193924392],[2342691e-11,6.13516214446,3930.2096962196],[1273165e-11,2.03709657878,529.6909650946],[1324294e-11,.74246341673,11506.7697697936],[901854e-11,2.04505446477,26.2983197998],[1199167e-11,1.10962946234,1577.3435424478],[857223e-11,3.50849152283,398.1490034082],[779786e-11,1.17882681962,5223.6939198022],[99025e-10,5.23268072088,5884.9268465832],[753141e-11,2.53339052847,5507.5532386674],[505267e-11,4.58292599973,18849.2275499742],[492392e-11,4.20505711826,775.522611324],[356672e-11,2.91954114478,.0673103028],[284125e-11,1.89869240932,796.2980068164],[242879e-11,.34481445893,5486.777843175],[317087e-11,5.84901948512,11790.6290886588],[271112e-11,.31486255375,10977.078804699],[206217e-11,4.80646631478,2544.3144198834],[205478e-11,1.86953770281,5573.1428014331],[202318e-11,2.45767790232,6069.7767545534],[126225e-11,1.08295459501,20.7753954924],[155516e-11,.83306084617,213.299095438]],[[6283.0758499914,0,0],[.00206058863,2.67823455808,6283.0758499914],[4303419e-11,2.63512233481,12566.1516999828]],[[8721859e-11,1.07253635559,6283.0758499914]]],[[],[[.00227777722,3.4137662053,6283.0758499914],[3805678e-11,3.37063423795,12566.1516999828]]],[[[1.00013988784,0,0],[.01670699632,3.09846350258,6283.0758499914],[.00013956024,3.05524609456,12566.1516999828],[308372e-10,5.19846674381,77713.7714681205],[1628463e-11,1.17387558054,5753.3848848968],[1575572e-11,2.84685214877,7860.4193924392],[924799e-11,5.45292236722,11506.7697697936],[542439e-11,4.56409151453,3930.2096962196],[47211e-10,3.66100022149,5884.9268465832],[85831e-11,1.27079125277,161000.6857376741],[57056e-11,2.01374292245,83996.84731811189],[55736e-11,5.2415979917,71430.69561812909],[174844e-11,3.01193636733,18849.2275499742],[243181e-11,4.2734953079,11790.6290886588]],[[.00103018607,1.10748968172,6283.0758499914],[1721238e-11,1.06442300386,12566.1516999828]],[[4359385e-11,5.78455133808,6283.0758499914]]]],Mars:[[[[6.20347711581,0,0],[.18656368093,5.0503710027,3340.6124266998],[.01108216816,5.40099836344,6681.2248533996],[.00091798406,5.75478744667,10021.8372800994],[.00027744987,5.97049513147,3.523118349],[.00010610235,2.93958560338,2281.2304965106],[.00012315897,.84956094002,2810.9214616052],[8926784e-11,4.15697846427,.0172536522],[8715691e-11,6.11005153139,13362.4497067992],[6797556e-11,.36462229657,398.1490034082],[7774872e-11,3.33968761376,5621.8429232104],[3575078e-11,1.6618650571,2544.3144198834],[4161108e-11,.22814971327,2942.4634232916],[3075252e-11,.85696614132,191.4482661116],[2628117e-11,.64806124465,3337.0893083508],[2937546e-11,6.07893711402,.0673103028],[2389414e-11,5.03896442664,796.2980068164],[2579844e-11,.02996736156,3344.1355450488],[1528141e-11,1.14979301996,6151.533888305],[1798806e-11,.65634057445,529.6909650946],[1264357e-11,3.62275122593,5092.1519581158],[1286228e-11,3.06796065034,2146.1654164752],[1546404e-11,2.91579701718,1751.539531416],[1024902e-11,3.69334099279,8962.4553499102],[891566e-11,.18293837498,16703.062133499],[858759e-11,2.4009381194,2914.0142358238],[832715e-11,2.46418619474,3340.5951730476],[83272e-10,4.49495782139,3340.629680352],[712902e-11,3.66335473479,1059.3819301892],[748723e-11,3.82248614017,155.4203994342],[723861e-11,.67497311481,3738.761430108],[635548e-11,2.92182225127,8432.7643848156],[655162e-11,.48864064125,3127.3133312618],[550474e-11,3.81001042328,.9803210682],[55275e-10,4.47479317037,1748.016413067],[425966e-11,.55364317304,6283.0758499914],[415131e-11,.49662285038,213.299095438],[472167e-11,3.62547124025,1194.4470102246],[306551e-11,.38052848348,6684.7479717486],[312141e-11,.99853944405,6677.7017350506],[293198e-11,4.22131299634,20.7753954924],[302375e-11,4.48618007156,3532.0606928114],[274027e-11,.54222167059,3340.545116397],[281079e-11,5.88163521788,1349.8674096588],[231183e-11,1.28242156993,3870.3033917944],[283602e-11,5.7688543494,3149.1641605882],[236117e-11,5.75503217933,3333.498879699],[274033e-11,.13372524985,3340.6797370026],[299395e-11,2.78323740866,6254.6266625236]],[[3340.61242700512,0,0],[.01457554523,3.60433733236,3340.6124266998],[.00168414711,3.92318567804,6681.2248533996],[.00020622975,4.26108844583,10021.8372800994],[3452392e-11,4.7321039319,3.523118349],[2586332e-11,4.60670058555,13362.4497067992],[841535e-11,4.45864030426,2281.2304965106]],[[.00058152577,2.04961712429,3340.6124266998],[.00013459579,2.45738706163,6681.2248533996]]],[[[.03197134986,3.76832042431,3340.6124266998],[.00298033234,4.10616996305,6681.2248533996],[.00289104742,0,0],[.00031365539,4.4465105309,10021.8372800994],[34841e-9,4.7881254926,13362.4497067992]],[[.00217310991,6.04472194776,3340.6124266998],[.00020976948,3.14159265359,0],[.00012834709,1.60810667915,6681.2248533996]]],[[[1.53033488271,0,0],[.1418495316,3.47971283528,3340.6124266998],[.00660776362,3.81783443019,6681.2248533996],[.00046179117,4.15595316782,10021.8372800994],[8109733e-11,5.55958416318,2810.9214616052],[7485318e-11,1.77239078402,5621.8429232104],[5523191e-11,1.3643630377,2281.2304965106],[382516e-10,4.49407183687,13362.4497067992],[2306537e-11,.09081579001,2544.3144198834],[1999396e-11,5.36059617709,3337.0893083508],[2484394e-11,4.9254563992,2942.4634232916],[1960195e-11,4.74249437639,3344.1355450488],[1167119e-11,2.11260868341,5092.1519581158],[1102816e-11,5.00908403998,398.1490034082],[899066e-11,4.40791133207,529.6909650946],[992252e-11,5.83861961952,6151.533888305],[807354e-11,2.10217065501,1059.3819301892],[797915e-11,3.44839203899,796.2980068164],[740975e-11,1.49906336885,2146.1654164752]],[[.01107433345,2.03250524857,3340.6124266998],[.00103175887,2.37071847807,6681.2248533996],[128772e-9,0,0],[.0001081588,2.70888095665,10021.8372800994]],[[.00044242249,.47930604954,3340.6124266998],[8138042e-11,.86998389204,6681.2248533996]]]],Jupiter:[[[[.59954691494,0,0],[.09695898719,5.06191793158,529.6909650946],[.00573610142,1.44406205629,7.1135470008],[.00306389205,5.41734730184,1059.3819301892],[.00097178296,4.14264726552,632.7837393132],[.00072903078,3.64042916389,522.5774180938],[.00064263975,3.41145165351,103.0927742186],[.00039806064,2.29376740788,419.4846438752],[.00038857767,1.27231755835,316.3918696566],[.00027964629,1.7845459182,536.8045120954],[.0001358973,5.7748104079,1589.0728952838],[8246349e-11,3.5822792584,206.1855484372],[8768704e-11,3.63000308199,949.1756089698],[7368042e-11,5.0810119427,735.8765135318],[626315e-10,.02497628807,213.299095438],[6114062e-11,4.51319998626,1162.4747044078],[4905396e-11,1.32084470588,110.2063212194],[5305285e-11,1.30671216791,14.2270940016],[5305441e-11,4.18625634012,1052.2683831884],[4647248e-11,4.69958103684,3.9321532631],[3045023e-11,4.31676431084,426.598190876],[2609999e-11,1.56667394063,846.0828347512],[2028191e-11,1.06376530715,3.1813937377],[1764763e-11,2.14148655117,1066.49547719],[1722972e-11,3.88036268267,1265.5674786264],[1920945e-11,.97168196472,639.897286314],[1633223e-11,3.58201833555,515.463871093],[1431999e-11,4.29685556046,625.6701923124],[973272e-11,4.09764549134,95.9792272178]],[[529.69096508814,0,0],[.00489503243,4.2208293947,529.6909650946],[.00228917222,6.02646855621,7.1135470008],[.00030099479,4.54540782858,1059.3819301892],[.0002072092,5.45943156902,522.5774180938],[.00012103653,.16994816098,536.8045120954],[6067987e-11,4.42422292017,103.0927742186],[5433968e-11,3.98480737746,419.4846438752],[4237744e-11,5.89008707199,14.2270940016]],[[.00047233601,4.32148536482,7.1135470008],[.00030649436,2.929777887,529.6909650946],[.00014837605,3.14159265359,0]]],[[[.02268615702,3.55852606721,529.6909650946],[.00109971634,3.90809347197,1059.3819301892],[.00110090358,0,0],[8101428e-11,3.60509572885,522.5774180938],[6043996e-11,4.25883108339,1589.0728952838],[6437782e-11,.30627119215,536.8045120954]],[[.00078203446,1.52377859742,529.6909650946]]],[[[5.20887429326,0,0],[.25209327119,3.49108639871,529.6909650946],[.00610599976,3.84115365948,1059.3819301892],[.00282029458,2.57419881293,632.7837393132],[.00187647346,2.07590383214,522.5774180938],[.00086792905,.71001145545,419.4846438752],[.00072062974,.21465724607,536.8045120954],[.00065517248,5.9799588479,316.3918696566],[.00029134542,1.67759379655,103.0927742186],[.00030135335,2.16132003734,949.1756089698],[.00023453271,3.54023522184,735.8765135318],[.00022283743,4.19362594399,1589.0728952838],[.00023947298,.2745803748,7.1135470008],[.00013032614,2.96042965363,1162.4747044078],[970336e-10,1.90669633585,206.1855484372],[.00012749023,2.71550286592,1052.2683831884],[7057931e-11,2.18184839926,1265.5674786264],[6137703e-11,6.26418240033,846.0828347512],[2616976e-11,2.00994012876,1581.959348283]],[[.0127180152,2.64937512894,529.6909650946],[.00061661816,3.00076460387,1059.3819301892],[.00053443713,3.89717383175,522.5774180938],[.00031185171,4.88276958012,536.8045120954],[.00041390269,0,0]]]],Saturn:[[[[.87401354025,0,0],[.11107659762,3.96205090159,213.299095438],[.01414150957,4.58581516874,7.1135470008],[.00398379389,.52112032699,206.1855484372],[.00350769243,3.30329907896,426.598190876],[.00206816305,.24658372002,103.0927742186],[792713e-9,3.84007056878,220.4126424388],[.00023990355,4.66976924553,110.2063212194],[.00016573588,.43719228296,419.4846438752],[.00014906995,5.76903183869,316.3918696566],[.0001582029,.93809155235,632.7837393132],[.00014609559,1.56518472,3.9321532631],[.00013160301,4.44891291899,14.2270940016],[.00015053543,2.71669915667,639.897286314],[.00013005299,5.98119023644,11.0457002639],[.00010725067,3.12939523827,202.2533951741],[5863206e-11,.23656938524,529.6909650946],[5227757e-11,4.20783365759,3.1813937377],[6126317e-11,1.76328667907,277.0349937414],[5019687e-11,3.17787728405,433.7117378768],[459255e-10,.61977744975,199.0720014364],[4005867e-11,2.24479718502,63.7358983034],[2953796e-11,.98280366998,95.9792272178],[387367e-10,3.22283226966,138.5174968707],[2461186e-11,2.03163875071,735.8765135318],[3269484e-11,.77492638211,949.1756089698],[1758145e-11,3.2658010994,522.5774180938],[1640172e-11,5.5050445305,846.0828347512],[1391327e-11,4.02333150505,323.5054166574],[1580648e-11,4.37265307169,309.2783226558],[1123498e-11,2.83726798446,415.5524906121],[1017275e-11,3.71700135395,227.5261894396],[848642e-11,3.1915017083,209.3669421749]],[[213.2990952169,0,0],[.01297370862,1.82834923978,213.299095438],[.00564345393,2.88499717272,7.1135470008],[.00093734369,1.06311793502,426.598190876],[.00107674962,2.27769131009,206.1855484372],[.00040244455,2.04108104671,220.4126424388],[.00019941774,1.2795439047,103.0927742186],[.00010511678,2.7488034213,14.2270940016],[6416106e-11,.38238295041,639.897286314],[4848994e-11,2.43037610229,419.4846438752],[4056892e-11,2.92133209468,110.2063212194],[3768635e-11,3.6496533078,3.9321532631]],[[.0011644133,1.17988132879,7.1135470008],[.00091841837,.0732519584,213.299095438],[.00036661728,0,0],[.00015274496,4.06493179167,206.1855484372]]],[[[.04330678039,3.60284428399,213.299095438],[.00240348302,2.85238489373,426.598190876],[.00084745939,0,0],[.00030863357,3.48441504555,220.4126424388],[.00034116062,.57297307557,206.1855484372],[.0001473407,2.11846596715,639.897286314],[9916667e-11,5.79003188904,419.4846438752],[6993564e-11,4.7360468972,7.1135470008],[4807588e-11,5.43305312061,316.3918696566]],[[.00198927992,4.93901017903,213.299095438],[.00036947916,3.14159265359,0],[.00017966989,.5197943111,426.598190876]]],[[[9.55758135486,0,0],[.52921382865,2.39226219573,213.299095438],[.01873679867,5.2354960466,206.1855484372],[.01464663929,1.64763042902,426.598190876],[.00821891141,5.93520042303,316.3918696566],[.00547506923,5.0153261898,103.0927742186],[.0037168465,2.27114821115,220.4126424388],[.00361778765,3.13904301847,7.1135470008],[.00140617506,5.70406606781,632.7837393132],[.00108974848,3.29313390175,110.2063212194],[.00069006962,5.94099540992,419.4846438752],[.00061053367,.94037691801,639.897286314],[.00048913294,1.55733638681,202.2533951741],[.00034143772,.19519102597,277.0349937414],[.00032401773,5.47084567016,949.1756089698],[.00020936596,.46349251129,735.8765135318],[9796004e-11,5.20477537945,1265.5674786264],[.00011993338,5.98050967385,846.0828347512],[208393e-9,1.52102476129,433.7117378768],[.00015298404,3.0594381494,529.6909650946],[6465823e-11,.17732249942,1052.2683831884],[.00011380257,1.7310542704,522.5774180938],[3419618e-11,4.94550542171,1581.959348283]],[[.0618298134,.2584351148,213.299095438],[.00506577242,.71114625261,206.1855484372],[.00341394029,5.79635741658,426.598190876],[.00188491195,.47215589652,220.4126424388],[.00186261486,3.14159265359,0],[.00143891146,1.40744822888,7.1135470008]],[[.00436902572,4.78671677509,213.299095438]]]],Uranus:[[[[5.48129294297,0,0],[.09260408234,.89106421507,74.7815985673],[.01504247898,3.6271926092,1.4844727083],[.00365981674,1.89962179044,73.297125859],[.00272328168,3.35823706307,149.5631971346],[.00070328461,5.39254450063,63.7358983034],[.00068892678,6.09292483287,76.2660712756],[.00061998615,2.26952066061,2.9689454166],[.00061950719,2.85098872691,11.0457002639],[.0002646877,3.14152083966,71.8126531507],[.00025710476,6.11379840493,454.9093665273],[.0002107885,4.36059339067,148.0787244263],[.00017818647,1.74436930289,36.6485629295],[.00014613507,4.73732166022,3.9321532631],[.00011162509,5.8268179635,224.3447957019],[.0001099791,.48865004018,138.5174968707],[9527478e-11,2.95516862826,35.1640902212],[7545601e-11,5.236265824,109.9456887885],[4220241e-11,3.23328220918,70.8494453042],[40519e-9,2.277550173,151.0476698429],[3354596e-11,1.0654900738,4.4534181249],[2926718e-11,4.62903718891,9.5612275556],[349034e-10,5.48306144511,146.594251718],[3144069e-11,4.75199570434,77.7505439839],[2922333e-11,5.35235361027,85.8272988312],[2272788e-11,4.36600400036,70.3281804424],[2051219e-11,1.51773566586,.1118745846],[2148602e-11,.60745949945,38.1330356378],[1991643e-11,4.92437588682,277.0349937414],[1376226e-11,2.04283539351,65.2203710117],[1666902e-11,3.62744066769,380.12776796],[1284107e-11,3.11347961505,202.2533951741],[1150429e-11,.93343589092,3.1813937377],[1533221e-11,2.58594681212,52.6901980395],[1281604e-11,.54271272721,222.8603229936],[1372139e-11,4.19641530878,111.4301614968],[1221029e-11,.1990065003,108.4612160802],[946181e-11,1.19253165736,127.4717966068],[1150989e-11,4.17898916639,33.6796175129]],[[74.7815986091,0,0],[.00154332863,5.24158770553,74.7815985673],[.00024456474,1.71260334156,1.4844727083],[9258442e-11,.4282973235,11.0457002639],[8265977e-11,1.50218091379,63.7358983034],[915016e-10,1.41213765216,149.5631971346]]],[[[.01346277648,2.61877810547,74.7815985673],[623414e-9,5.08111189648,149.5631971346],[.00061601196,3.14159265359,0],[9963722e-11,1.61603805646,76.2660712756],[992616e-10,.57630380333,73.297125859]],[[.00034101978,.01321929936,74.7815985673]]],[[[19.21264847206,0,0],[.88784984413,5.60377527014,74.7815985673],[.03440836062,.32836099706,73.297125859],[.0205565386,1.7829515933,149.5631971346],[.0064932241,4.52247285911,76.2660712756],[.00602247865,3.86003823674,63.7358983034],[.00496404167,1.40139935333,454.9093665273],[.00338525369,1.58002770318,138.5174968707],[.00243509114,1.57086606044,71.8126531507],[.00190522303,1.99809394714,1.4844727083],[.00161858838,2.79137786799,148.0787244263],[.00143706183,1.38368544947,11.0457002639],[.00093192405,.17437220467,36.6485629295],[.00071424548,4.24509236074,224.3447957019],[.00089806014,3.66105364565,109.9456887885],[.00039009723,1.66971401684,70.8494453042],[.00046677296,1.39976401694,35.1640902212],[.00039025624,3.36234773834,277.0349937414],[.00036755274,3.88649278513,146.594251718],[.00030348723,.70100838798,151.0476698429],[.00029156413,3.180563367,77.7505439839],[.00022637073,.72518687029,529.6909650946],[.00011959076,1.7504339214,984.6003316219],[.00025620756,5.25656086672,380.12776796]],[[.01479896629,3.67205697578,74.7815985673]]]],Neptune:[[[[5.31188633046,0,0],[.0179847553,2.9010127389,38.1330356378],[.01019727652,.48580922867,1.4844727083],[.00124531845,4.83008090676,36.6485629295],[.00042064466,5.41054993053,2.9689454166],[.00037714584,6.09221808686,35.1640902212],[.00033784738,1.24488874087,76.2660712756],[.00016482741,7727998e-11,491.5579294568],[9198584e-11,4.93747051954,39.6175083461],[899425e-10,.27462171806,175.1660598002]],[[38.13303563957,0,0],[.00016604172,4.86323329249,1.4844727083],[.00015744045,2.27887427527,38.1330356378]]],[[[.03088622933,1.44104372644,38.1330356378],[.00027780087,5.91271884599,76.2660712756],[.00027623609,0,0],[.00015355489,2.52123799551,36.6485629295],[.00015448133,3.50877079215,39.6175083461]]],[[[30.07013205828,0,0],[.27062259632,1.32999459377,38.1330356378],[.01691764014,3.25186135653,36.6485629295],[.00807830553,5.18592878704,1.4844727083],[.0053776051,4.52113935896,35.1640902212],[.00495725141,1.5710564165,491.5579294568],[.00274571975,1.84552258866,175.1660598002],[.0001201232,1.92059384991,1021.2488945514],[.00121801746,5.79754470298,76.2660712756],[.00100896068,.3770272493,73.297125859],[.00135134092,3.37220609835,39.6175083461],[7571796e-11,1.07149207335,388.4651552382]]]]};function Er(t){var e,n,o,a,c,l,v;const u=2e3+(t-14)/cr;return u<-500?(e=(u-1820)/100,-20+32*e*e):u<500?(e=u/100,n=e*e,o=e*n,a=n*n,c=n*o,l=o*o,10583.6-1014.41*e+33.78311*n-5.952053*o-.1798452*a+.022174192*c+.0090316521*l):u<1600?(e=(u-1e3)/100,n=e*e,o=e*n,a=n*n,c=n*o,l=o*o,1574.2-556.01*e+71.23472*n+.319781*o-.8503463*a-.005050998*c+.0083572073*l):u<1700?(e=u-1600,n=e*e,o=e*n,120-.9808*e-.01532*n+o/7129):u<1800?(e=u-1700,n=e*e,o=e*n,a=n*n,8.83+.1603*e-.0059285*n+13336e-8*o-a/1174e3):u<1860?(e=u-1800,n=e*e,o=e*n,a=n*n,c=n*o,l=o*o,v=o*a,13.72-.332447*e+.0068612*n+.0041116*o-37436e-8*a+121272e-10*c-1699e-10*l+875e-12*v):u<1900?(e=u-1860,n=e*e,o=e*n,a=n*n,c=n*o,7.62+.5737*e-.251754*n+.01680668*o-.0004473624*a+c/233174):u<1920?(e=u-1900,n=e*e,o=e*n,a=n*n,-2.79+1.494119*e-.0598939*n+.0061966*o-197e-6*a):u<1941?(e=u-1920,n=e*e,o=e*n,21.2+.84493*e-.0761*n+.0020936*o):u<1961?(e=u-1950,n=e*e,o=e*n,29.07+.407*e-n/233+o/2547):u<1986?(e=u-1975,n=e*e,o=e*n,45.45+1.067*e-n/260-o/718):u<2005?(e=u-2e3,n=e*e,o=e*n,a=n*n,c=n*o,63.86+.3345*e-.060374*n+.0017275*o+651814e-9*a+2373599e-11*c):u<2050?(e=u-2e3,62.92+.32217*e+.005589*e*e):u<2150?(e=(u-1820)/100,-20+32*e*e-.5628*(2150-u)):(e=(u-1820)/100,-20+32*e*e)}let Sr=Er;function bn(t){return t+Sr(t)/86400}class ie{constructor(e){if(e instanceof ie){this.date=e.date,this.ut=e.ut,this.tt=e.tt;return}const n=1e3*3600*24;if(e instanceof Date&&Number.isFinite(e.getTime())){this.date=e,this.ut=(e.getTime()-Fn.getTime())/n,this.tt=bn(this.ut);return}if(Number.isFinite(e)){this.date=new Date(Fn.getTime()+e*n),this.ut=e,this.tt=bn(this.ut);return}throw"Argument must be a Date object, an AstroTime object, or a numeric UTC Julian date."}static FromTerrestrialTime(e){let n=new ie(e);for(;;){const o=e-n.tt;if(Math.abs(o)<1e-12)return n;n=n.AddDays(o)}}toString(){return this.date.toISOString()}AddDays(e){return new ie(this.ut+e)}}function ue(t){return t instanceof ie?t:new ie(t)}function _r(t){function e(I){return I%ur*fe}const n=t.tt/36525,o=e(128710479305e-5+n*1295965810481e-4),a=e(335779.526232+n*17395272628478e-4),c=e(107226070369e-5+n*1602961601209e-3),l=e(450160.398036-n*69628905431e-4);let v=Math.sin(l),u=Math.cos(l),E=(-172064161-174666*n)*v+33386*u,S=(92052331+9086*n)*u+15377*v,g=2*(a-c+l);return v=Math.sin(g),u=Math.cos(g),E+=(-13170906-1675*n)*v-13696*u,S+=(5730336-3015*n)*u-4587*v,g=2*(a+l),v=Math.sin(g),u=Math.cos(g),E+=(-2276413-234*n)*v+2796*u,S+=(978459-485*n)*u+1374*v,g=2*l,v=Math.sin(g),u=Math.cos(g),E+=(2074554+207*n)*v-698*u,S+=(-897492+470*n)*u-291*v,v=Math.sin(o),u=Math.cos(o),E+=(1475877-3633*n)*v+11817*u,S+=(73871-184*n)*u-1924*v,{dpsi:-135e-6+E*1e-7,deps:388e-6+S*1e-7}}function Jn(t){var e=t.tt/36525,n=((((-434e-10*e-576e-9)*e+.0020034)*e-1831e-7)*e-46.836769)*e+84381.406;return n/3600}var He;function Qn(t){if(!He||Math.abs(He.tt-t.tt)>1e-6){const e=_r(t),n=Jn(t),o=n+e.deps/3600;He={tt:t.tt,dpsi:e.dpsi,deps:e.deps,ee:e.dpsi*Math.cos(n*me)/15,mobl:n,tobl:o}}return He}function Tr(t,e){const n=t*me,o=Math.cos(n),a=Math.sin(n);return[e[0],e[1]*o-e[2]*a,e[1]*a+e[2]*o]}function gr(t,e){return Tr(Jn(t),e)}function wr(t){const e=t.tt/36525;function n(z,B){const q=[];let e0;for(e0=0;e0<=B-z;++e0)q.push(0);return{min:z,array:q}}function o(z,B,q,e0){const i0=[];for(let z0=0;z0<=B-z;++z0)i0.push(n(q,e0));return{min:z,array:i0}}function a(z,B,q){const e0=z.array[B-z.min];return e0.array[q-e0.min]}function c(z,B,q,e0){const i0=z.array[B-z.min];i0.array[q-i0.min]=e0}let l,v,u,E,S,g,I,N,O,P,H,J,t0,r0,c0,E0,l0,h0,n0,b0,K0,H0,u0,w0=o(-6,6,1,4),_0=o(-6,6,1,4);function k0(z,B){return a(w0,z,B)}function p0(z,B){return a(_0,z,B)}function B0(z,B,q){return c(w0,z,B,q)}function V0(z,B,q){return c(_0,z,B,q)}function J0(z,B,q,e0,i0){i0(z*q-B*e0,B*q+z*e0)}function F(z){return Math.sin(Y0*z)}I=e*e,O=0,u0=0,H=0,J=3422.7;var D0=F(.19833+.05611*e),a0=F(.27869+.04508*e),N0=F(.16827-.36903*e),U0=F(.34734-5.37261*e),Z0=F(.10498-5.37899*e),G=F(.42681-.41855*e),O0=F(.14943-5.37511*e);for(h0=.84*D0+.31*a0+14.27*N0+7.26*U0+.28*Z0+.24*G,n0=2.94*D0+.31*a0+14.27*N0+9.34*U0+1.12*Z0+.83*G,b0=-6.4*D0-1.89*G,K0=.21*D0+.31*a0+14.27*N0-88.7*U0-15.3*Z0+.24*G-1.86*O0,H0=h0-b0,N=-3332e-9*F(.59734-5.37261*e)-539e-9*F(.35498-5.37899*e)-64e-9*F(.39943-5.37511*e),t0=Y0*ve(.60643382+1336.85522467*e-313e-8*I)+h0/ne,r0=Y0*ve(.37489701+1325.55240982*e+2565e-8*I)+n0/ne,c0=Y0*ve(.99312619+99.99735956*e-44e-8*I)+b0/ne,E0=Y0*ve(.25909118+1342.2278298*e-892e-8*I)+K0/ne,l0=Y0*ve(.82736186+1236.85308708*e-397e-8*I)+H0/ne,S=1;S<=4;++S){switch(S){case 1:u=r0,v=4,E=1.000002208;break;case 2:u=c0,v=3,E=.997504612-.002495388*e;break;case 3:u=E0,v=4,E=1.000002708+139.978*N;break;case 4:u=l0,v=6,E=1;break;default:throw`Internal error: I = ${S}`}for(B0(0,S,1),B0(1,S,Math.cos(u)*E),V0(0,S,0),V0(1,S,Math.sin(u)*E),g=2;g<=v;++g)J0(k0(g-1,S),p0(g-1,S),k0(1,S),p0(1,S),(z,B)=>(B0(g,S,z),V0(g,S,B)));for(g=1;g<=v;++g)B0(-g,S,k0(g,S)),V0(-g,S,-p0(g,S))}function R0(z,B,q,e0){for(var i0={x:1,y:0},z0=[0,z,B,q,e0],P0=1;P0<=4;++P0)z0[P0]!==0&&J0(i0.x,i0.y,k0(z0[P0],P0),p0(z0[P0],P0),(Se,Q0)=>(i0.x=Se,i0.y=Q0));return i0}function m(z,B,q,e0,i0,z0,P0,Se){var Q0=R0(i0,z0,P0,Se);O+=z*Q0.y,u0+=B*Q0.y,H+=q*Q0.x,J+=e0*Q0.x}m(13.902,14.06,-.001,.2607,0,0,0,4),m(.403,-4.01,.394,.0023,0,0,0,3),m(2369.912,2373.36,.601,28.2333,0,0,0,2),m(-125.154,-112.79,-.725,-.9781,0,0,0,1),m(1.979,6.98,-.445,.0433,1,0,0,4),m(191.953,192.72,.029,3.0861,1,0,0,2),m(-8.466,-13.51,.455,-.1093,1,0,0,1),m(22639.5,22609.07,.079,186.5398,1,0,0,0),m(18.609,3.59,-.094,.0118,1,0,0,-1),m(-4586.465,-4578.13,-.077,34.3117,1,0,0,-2),m(3.215,5.44,.192,-.0386,1,0,0,-3),m(-38.428,-38.64,.001,.6008,1,0,0,-4),m(-.393,-1.43,-.092,.0086,1,0,0,-6),m(-.289,-1.59,.123,-.0053,0,1,0,4),m(-24.42,-25.1,.04,-.3,0,1,0,2),m(18.023,17.93,.007,.1494,0,1,0,1),m(-668.146,-126.98,-1.302,-.3997,0,1,0,0),m(.56,.32,-.001,-.0037,0,1,0,-1),m(-165.145,-165.06,.054,1.9178,0,1,0,-2),m(-1.877,-6.46,-.416,.0339,0,1,0,-4),m(.213,1.02,-.074,.0054,2,0,0,4),m(14.387,14.78,-.017,.2833,2,0,0,2),m(-.586,-1.2,.054,-.01,2,0,0,1),m(769.016,767.96,.107,10.1657,2,0,0,0),m(1.75,2.01,-.018,.0155,2,0,0,-1),m(-211.656,-152.53,5.679,-.3039,2,0,0,-2),m(1.225,.91,-.03,-.0088,2,0,0,-3),m(-30.773,-34.07,-.308,.3722,2,0,0,-4),m(-.57,-1.4,-.074,.0109,2,0,0,-6),m(-2.921,-11.75,.787,-.0484,1,1,0,2),m(1.267,1.52,-.022,.0164,1,1,0,1),m(-109.673,-115.18,.461,-.949,1,1,0,0),m(-205.962,-182.36,2.056,1.4437,1,1,0,-2),m(.233,.36,.012,-.0025,1,1,0,-3),m(-4.391,-9.66,-.471,.0673,1,1,0,-4),m(.283,1.53,-.111,.006,1,-1,0,4),m(14.577,31.7,-1.54,.2302,1,-1,0,2),m(147.687,138.76,.679,1.1528,1,-1,0,0),m(-1.089,.55,.021,0,1,-1,0,-1),m(28.475,23.59,-.443,-.2257,1,-1,0,-2),m(-.276,-.38,-.006,-.0036,1,-1,0,-3),m(.636,2.27,.146,-.0102,1,-1,0,-4),m(-.189,-1.68,.131,-.0028,0,2,0,2),m(-7.486,-.66,-.037,-.0086,0,2,0,0),m(-8.096,-16.35,-.74,.0918,0,2,0,-2),m(-5.741,-.04,0,-9e-4,0,0,2,2),m(.255,0,0,0,0,0,2,1),m(-411.608,-.2,0,-.0124,0,0,2,0),m(.584,.84,0,.0071,0,0,2,-1),m(-55.173,-52.14,0,-.1052,0,0,2,-2),m(.254,.25,0,-.0017,0,0,2,-3),m(.025,-1.67,0,.0031,0,0,2,-4),m(1.06,2.96,-.166,.0243,3,0,0,2),m(36.124,50.64,-1.3,.6215,3,0,0,0),m(-13.193,-16.4,.258,-.1187,3,0,0,-2),m(-1.187,-.74,.042,.0074,3,0,0,-4),m(-.293,-.31,-.002,.0046,3,0,0,-6),m(-.29,-1.45,.116,-.0051,2,1,0,2),m(-7.649,-10.56,.259,-.1038,2,1,0,0),m(-8.627,-7.59,.078,-.0192,2,1,0,-2),m(-2.74,-2.54,.022,.0324,2,1,0,-4),m(1.181,3.32,-.212,.0213,2,-1,0,2),m(9.703,11.67,-.151,.1268,2,-1,0,0),m(-.352,-.37,.001,-.0028,2,-1,0,-1),m(-2.494,-1.17,-.003,-.0017,2,-1,0,-2),m(.36,.2,-.012,-.0043,2,-1,0,-4),m(-1.167,-1.25,.008,-.0106,1,2,0,0),m(-7.412,-6.12,.117,.0484,1,2,0,-2),m(-.311,-.65,-.032,.0044,1,2,0,-4),m(.757,1.82,-.105,.0112,1,-2,0,2),m(2.58,2.32,.027,.0196,1,-2,0,0),m(2.533,2.4,-.014,-.0212,1,-2,0,-2),m(-.344,-.57,-.025,.0036,0,3,0,-2),m(-.992,-.02,0,0,1,0,2,2),m(-45.099,-.02,0,-.001,1,0,2,0),m(-.179,-9.52,0,-.0833,1,0,2,-2),m(-.301,-.33,0,.0014,1,0,2,-4),m(-6.382,-3.37,0,-.0481,1,0,-2,2),m(39.528,85.13,0,-.7136,1,0,-2,0),m(9.366,.71,0,-.0112,1,0,-2,-2),m(.202,.02,0,0,1,0,-2,-4),m(.415,.1,0,.0013,0,1,2,0),m(-2.152,-2.26,0,-.0066,0,1,2,-2),m(-1.44,-1.3,0,.0014,0,1,-2,2),m(.384,-.04,0,0,0,1,-2,-2),m(1.938,3.6,-.145,.0401,4,0,0,0),m(-.952,-1.58,.052,-.013,4,0,0,-2),m(-.551,-.94,.032,-.0097,3,1,0,0),m(-.482,-.57,.005,-.0045,3,1,0,-2),m(.681,.96,-.026,.0115,3,-1,0,0),m(-.297,-.27,.002,-9e-4,2,2,0,-2),m(.254,.21,-.003,0,2,-2,0,-2),m(-.25,-.22,.004,.0014,1,3,0,-2),m(-3.996,0,0,4e-4,2,0,2,0),m(.557,-.75,0,-.009,2,0,2,-2),m(-.459,-.38,0,-.0053,2,0,-2,2),m(-1.298,.74,0,4e-4,2,0,-2,0),m(.538,1.14,0,-.0141,2,0,-2,-2),m(.263,.02,0,0,1,1,2,0),m(.426,.07,0,-6e-4,1,1,-2,-2),m(-.304,.03,0,3e-4,1,-1,2,0),m(-.372,-.19,0,-.0027,1,-1,-2,2),m(.418,0,0,0,0,0,4,0),m(-.33,-.04,0,0,3,0,2,0);function A0(z,B,q,e0,i0){return z*R0(B,q,e0,i0).y}P=0,P+=A0(-526.069,0,0,1,-2),P+=A0(-3.352,0,0,1,-4),P+=A0(44.297,1,0,1,-2),P+=A0(-6,1,0,1,-4),P+=A0(20.599,-1,0,1,0),P+=A0(-30.598,-1,0,1,-2),P+=A0(-24.649,-2,0,1,0),P+=A0(-2,-2,0,1,-2),P+=A0(-22.571,0,1,1,-2),P+=A0(10.985,0,-1,1,-2),O+=.82*F(.7736-62.5512*e)+.31*F(.0466-125.1025*e)+.35*F(.5785-25.1042*e)+.66*F(.4591+1335.8075*e)+.64*F(.313-91.568*e)+1.14*F(.148+1331.2898*e)+.21*F(.5918+1056.5859*e)+.44*F(.5784+1322.8595*e)+.24*F(.2275-5.7374*e)+.28*F(.2965+2.6929*e)+.33*F(.3132+6.3368*e),l=E0+u0/ne;let Le=(1.000002708+139.978*N)*(18518.511+1.189+H)*Math.sin(l)-6.24*Math.sin(3*l)+P;return{geo_eclip_lon:Y0*ve((t0+O/ne)/Y0),geo_eclip_lat:Math.PI/(180*3600)*Le,distance_au:ne*vr/(.999953253*J)}}function Rr(t,e){return[t.rot[0][0]*e[0]+t.rot[1][0]*e[1]+t.rot[2][0]*e[2],t.rot[0][1]*e[0]+t.rot[1][1]*e[1]+t.rot[2][1]*e[2],t.rot[0][2]*e[0]+t.rot[1][2]*e[1]+t.rot[2][2]*e[2]]}function Ar(t,e,n){const o=et(e,n);return Rr(o,t)}function et(t,e){const n=t.tt/36525;let o=84381.406,a=((((-951e-10*n+132851e-9)*n-.00114045)*n-1.0790069)*n+5038.481507)*n,c=((((3337e-10*n-467e-9)*n-.00772503)*n+.0512623)*n-.025754)*n+o,l=((((-56e-9*n+170663e-9)*n-.00121197)*n-2.3814292)*n+10.556403)*n;o*=fe,a*=fe,c*=fe,l*=fe;const v=Math.sin(o),u=Math.cos(o),E=Math.sin(-a),S=Math.cos(-a),g=Math.sin(-c),I=Math.cos(-c),N=Math.sin(l),O=Math.cos(l),P=O*S-E*N*I,H=O*E*u+N*I*S*u-v*N*g,J=O*E*v+N*I*S*v+u*N*g,t0=-N*S-E*O*I,r0=-N*E*u+O*I*S*u-v*O*g,c0=-N*E*v+O*I*S*v+u*O*g,E0=E*g,l0=-g*S*u-v*I,h0=-g*S*v+I*u;if(e===q0.Into2000)return new Ee([[P,H,J],[t0,r0,c0],[E0,l0,h0]]);if(e===q0.From2000)return new Ee([[P,t0,E0],[H,r0,l0],[J,c0,h0]]);throw"Invalid precess direction"}function Cr(t){const e=.779057273264+.00273781191135448*t.ut,n=t.ut%1;let o=360*((e+n)%1);return o<0&&(o+=360),o}let ze;function yr(t){if(!ze||ze.tt!==t.tt){const e=t.tt/36525;let n=15*Qn(t).ee;const o=Cr(t);let c=((n+.014506+((((-368e-10*e-29956e-9)*e-44e-8)*e+1.3915817)*e+4612.156534)*e)/3600+o)%360/15;c<0&&(c+=24),ze={tt:t.tt,st:c}}return ze.st}function Ir(t){const e=ue(t);return yr(e)}function xr(t,e){const n=Qn(t),o=n.mobl*me,a=n.tobl*me,c=n.dpsi*fe,l=Math.cos(o),v=Math.sin(o),u=Math.cos(a),E=Math.sin(a),S=Math.cos(c),g=Math.sin(c),I=S,N=-g*l,O=-g*v,P=g*u,H=S*l*u+v*E,J=S*v*u-l*E,t0=g*E,r0=S*l*E-v*u,c0=S*v*E+l*u;if(e===q0.From2000)return new Ee([[I,P,t0],[N,H,r0],[O,J,c0]]);if(e===q0.Into2000)return new Ee([[I,N,O],[P,H,J],[t0,r0,c0]]);throw"Invalid precess direction"}class F0{constructor(e,n,o,a){this.x=e,this.y=n,this.z=o,this.t=a}Length(){return Math.hypot(this.x,this.y,this.z)}}class Mr{constructor(e,n,o,a,c,l,v){this.x=e,this.y=n,this.z=o,this.vx=a,this.vy=c,this.vz=l,this.t=v}}class Dr{constructor(e,n,o){this.lat=on(e),this.lon=on(n),this.dist=on(o)}}class Ee{constructor(e){this.rot=e}}function Sn(t){const e=ue(t),n=wr(e),o=n.distance_au*Math.cos(n.geo_eclip_lat),a=[o*Math.cos(n.geo_eclip_lon),o*Math.sin(n.geo_eclip_lon),n.distance_au*Math.sin(n.geo_eclip_lat)],c=gr(e,a),l=Ar(c,e,q0.Into2000);return new F0(l[0],l[1],l[2],e)}function pe(t,e,n){let o=1,a=0;for(let c of t){let l=0;for(let[u,E,S]of c)l+=u*Math.cos(E+e*S);let v=o*l;n&&(v%=Y0),a+=v,o*=e}return a}function an(t,e){let n=1,o=0,a=0,c=0;for(let l of t){let v=0,u=0;for(let[E,S,g]of l){let I=S+e*g;v+=E*g*Math.sin(I),c>0&&(u+=E*Math.cos(I))}a+=c*o*u-n*v,o=n,n*=e,++c}return a}const ye=365250,_n=0,Tn=1,gn=2;function wn(t){return new f0(t[0]+44036e-11*t[1]-190919e-12*t[2],-479966e-12*t[0]+.917482137087*t[1]-.397776982902*t[2],.397776982902*t[1]+.917482137087*t[2])}function nt(t,e,n){const o=n*Math.cos(e),a=Math.cos(t),c=Math.sin(t);return[o*a,o*c,n*Math.sin(e)]}function Ze(t,e){const n=e.tt/ye,o=pe(t[_n],n,!0),a=pe(t[Tn],n,!1),c=pe(t[gn],n,!1),l=nt(o,a,c);return wn(l).ToAstroVector(e)}function Nr(t,e){const n=e/ye,o=pe(t[_n],n,!0),a=pe(t[Tn],n,!1),c=pe(t[gn],n,!1),l=an(t[_n],n),v=an(t[Tn],n),u=an(t[gn],n),E=Math.cos(o),S=Math.sin(o),g=Math.cos(a),I=Math.sin(a),N=+(u*g*E)-c*I*E*v-c*g*S*l,O=+(u*g*S)-c*I*S*v+c*g*E*l,P=+(u*I)+c*g*v,H=nt(o,a,c),J=[N/ye,O/ye,P/ye],t0=wn(H),r0=wn(J);return new le(e,t0,r0)}function Ge(t,e,n,o){const a=o/(o+xn),c=Ze(he[n],e);t.x+=a*c.x,t.y+=a*c.y,t.z+=a*c.z}function Ur(t){const e=new F0(0,0,0,t);return Ge(e,t,k.Jupiter,hn),Ge(e,t,k.Saturn,pn),Ge(e,t,k.Uranus,mn),Ge(e,t,k.Neptune,En),e}const Rn=51,Or=29200,We=146,$0=201,se=[[-73e4,[-26.118207232108,-14.376168177825,3.384402515299],[.0016339372163656,-.0027861699588508,-.0013585880229445]],[-700800,[41.974905202127,-.448502952929,-12.770351505989],[.00073458569351457,.0022785014891658,.00048619778602049]],[-671600,[14.706930780744,44.269110540027,9.353698474772],[-.00210001479998,.00022295915939915,.00070143443551414]],[-642400,[-29.441003929957,-6.43016153057,6.858481011305],[.00084495803960544,-.0030783914758711,-.0012106305981192]],[-613200,[39.444396946234,-6.557989760571,-13.913760296463],[.0011480029005873,.0022400006880665,.00035168075922288]],[-584e3,[20.2303809507,43.266966657189,7.382966091923],[-.0019754081700585,.00053457141292226,.00075929169129793]],[-554800,[-30.65832536462,2.093818874552,9.880531138071],[61010603013347e-18,-.0031326500935382,-.00099346125151067]],[-525600,[35.737703251673,-12.587706024764,-14.677847247563],[.0015802939375649,.0021347678412429,.00019074436384343]],[-496400,[25.466295188546,41.367478338417,5.216476873382],[-.0018054401046468,.0008328308359951,.00080260156912107]],[-467200,[-29.847174904071,10.636426313081,12.297904180106],[-.00063257063052907,-.0029969577578221,-.00074476074151596]],[-438e3,[30.774692107687,-18.236637015304,-14.945535879896],[.0020113162005465,.0019353827024189,-20937793168297e-19]],[-408800,[30.243153324028,38.656267888503,2.938501750218],[-.0016052508674468,.0011183495337525,.00083333973416824]],[-379600,[-27.288984772533,18.643162147874,14.023633623329],[-.0011856388898191,-.0027170609282181,-.00049015526126399]],[-350400,[24.519605196774,-23.245756064727,-14.626862367368],[.0024322321483154,.0016062008146048,-.00023369181613312]],[-321200,[34.505274805875,35.125338586954,.557361475637],[-.0013824391637782,.0013833397561817,.00084823598806262]],[-292e3,[-23.275363915119,25.818514298769,15.055381588598],[-.0016062295460975,-.0023395961498533,-.00024377362639479]],[-262800,[17.050384798092,-27.180376290126,-13.608963321694],[.0028175521080578,.0011358749093955,-.00049548725258825]],[-233600,[38.093671910285,30.880588383337,-1.843688067413],[-.0011317697153459,.0016128814698472,.00084177586176055]],[-204400,[-18.197852930878,31.932869934309,15.438294826279],[-.0019117272501813,-.0019146495909842,-19657304369835e-18]],[-175200,[8.528924039997,-29.618422200048,-11.805400994258],[.0031034370787005,.0005139363329243,-.00077293066202546]],[-146e3,[40.94685725864,25.904973592021,-4.256336240499],[-.00083652705194051,.0018129497136404,.0008156422827306]],[-116800,[-12.326958895325,36.881883446292,15.217158258711],[-.0021166103705038,-.001481442003599,.00017401209844705]],[-87600,[-.633258375909,-30.018759794709,-9.17193287495],[.0032016994581737,-.00025279858672148,-.0010411088271861]],[-58400,[42.936048423883,20.344685584452,-6.588027007912],[-.00050525450073192,.0019910074335507,.00077440196540269]],[-29200,[-5.975910552974,40.61180995846,14.470131723673],[-.0022184202156107,-.0010562361130164,.00033652250216211]],[0,[-9.875369580774,-27.978926224737,-5.753711824704],[.0030287533248818,-.0011276087003636,-.0012651326732361]],[29200,[43.958831986165,14.214147973292,-8.808306227163],[-.00014717608981871,.0021404187242141,.00071486567806614]],[58400,[.67813676352,43.094461639362,13.243238780721],[-.0022358226110718,-.00063233636090933,.00047664798895648]],[87600,[-18.282602096834,-23.30503958666,-1.766620508028],[.0025567245263557,-.0019902940754171,-.0013943491701082]],[116800,[43.873338744526,7.700705617215,-10.814273666425],[.00023174803055677,.0022402163127924,.00062988756452032]],[146e3,[7.392949027906,44.382678951534,11.629500214854],[-.002193281545383,-.00021751799585364,.00059556516201114]],[175200,[-24.981690229261,-16.204012851426,2.466457544298],[.001819398914958,-.0026765419531201,-.0013848283502247]],[204400,[42.530187039511,.845935508021,-12.554907527683],[.00065059779150669,.0022725657282262,.00051133743202822]],[233600,[13.999526486822,44.462363044894,9.669418486465],[-.0021079296569252,.00017533423831993,.00069128485798076]],[262800,[-29.184024803031,-7.371243995762,6.493275957928],[.00093581363109681,-.0030610357109184,-.0012364201089345]],[292e3,[39.831980671753,-6.078405766765,-13.909815358656],[.0011117769689167,.0022362097830152,.00036230548231153]],[321200,[20.294955108476,43.417190420251,7.450091985932],[-.0019742157451535,.00053102050468554,.00075938408813008]],[350400,[-30.66999230216,2.318743558955,9.973480913858],[45605107450676e-18,-.0031308219926928,-.00099066533301924]],[379600,[35.626122155983,-12.897647509224,-14.777586508444],[.0016015684949743,.0021171931182284,.00018002516202204]],[408800,[26.133186148561,41.232139187599,5.00640132622],[-.0017857704419579,.00086046232702817,.00080614690298954]],[438e3,[-29.57674022923,11.863535943587,12.631323039872],[-.00072292830060955,-.0029587820140709,-.000708242964503]],[467200,[29.910805787391,-19.159019294,-15.013363865194],[.0020871080437997,.0018848372554514,-38528655083926e-18]],[496400,[31.375957451819,38.050372720763,2.433138343754],[-.0015546055556611,.0011699815465629,.00083565439266001]],[525600,[-26.360071336928,20.662505904952,14.414696258958],[-.0013142373118349,-.0026236647854842,-.00042542017598193]],[554800,[22.599441488648,-24.508879898306,-14.484045731468],[.0025454108304806,.0014917058755191,-.00030243665086079]],[584e3,[35.877864013014,33.894226366071,-.224524636277],[-.0012941245730845,.0014560427668319,.00084762160640137]],[613200,[-21.538149762417,28.204068269761,15.321973799534],[-.001731211740901,-.0021939631314577,-.0001631691327518]],[642400,[13.971521374415,-28.339941764789,-13.083792871886],[.0029334630526035,.00091860931752944,-.00059939422488627]],[671600,[39.526942044143,28.93989736011,-2.872799527539],[-.0010068481658095,.001702113288809,.00083578230511981]],[700800,[-15.576200701394,34.399412961275,15.466033737854],[-.0020098814612884,-.0017191109825989,70414782780416e-18]],[73e4,[4.24325283709,-30.118201690825,-10.707441231349],[.0031725847067411,.0001609846120227,-.00090672150593868]]];class f0{constructor(e,n,o){this.x=e,this.y=n,this.z=o}clone(){return new f0(this.x,this.y,this.z)}ToAstroVector(e){return new F0(this.x,this.y,this.z,e)}static zero(){return new f0(0,0,0)}quadrature(){return this.x*this.x+this.y*this.y+this.z*this.z}add(e){return new f0(this.x+e.x,this.y+e.y,this.z+e.z)}sub(e){return new f0(this.x-e.x,this.y-e.y,this.z-e.z)}incr(e){this.x+=e.x,this.y+=e.y,this.z+=e.z}decr(e){this.x-=e.x,this.y-=e.y,this.z-=e.z}mul(e){return new f0(e*this.x,e*this.y,e*this.z)}div(e){return new f0(this.x/e,this.y/e,this.z/e)}mean(e){return new f0((this.x+e.x)/2,(this.y+e.y)/2,(this.z+e.z)/2)}neg(){return new f0(-this.x,-this.y,-this.z)}}class le{constructor(e,n,o){this.tt=e,this.r=n,this.v=o}clone(){return new le(this.tt,this.r,this.v)}sub(e){return new le(this.tt,this.r.sub(e.r),this.v.sub(e.v))}}function Pr(t){let[e,[n,o,a],[c,l,v]]=t;return new le(e,new f0(n,o,a),new f0(c,l,v))}function ke(t,e,n,o){const a=o/(o+xn),c=Nr(he[n],e);return t.r.incr(c.r.mul(a)),t.v.incr(c.v.mul(a)),c}function Ae(t,e,n){const o=n.sub(t),a=o.quadrature();return o.mul(e/(a*Math.sqrt(a)))}class Mn{constructor(e){let n=new le(e,new f0(0,0,0),new f0(0,0,0));this.Jupiter=ke(n,e,k.Jupiter,hn),this.Saturn=ke(n,e,k.Saturn,pn),this.Uranus=ke(n,e,k.Uranus,mn),this.Neptune=ke(n,e,k.Neptune,En),this.Jupiter.r.decr(n.r),this.Jupiter.v.decr(n.v),this.Saturn.r.decr(n.r),this.Saturn.v.decr(n.v),this.Uranus.r.decr(n.r),this.Uranus.v.decr(n.v),this.Neptune.r.decr(n.r),this.Neptune.v.decr(n.v),this.Sun=new le(e,n.r.mul(-1),n.v.mul(-1))}Acceleration(e){let n=Ae(e,xn,this.Sun.r);return n.incr(Ae(e,hn,this.Jupiter.r)),n.incr(Ae(e,pn,this.Saturn.r)),n.incr(Ae(e,mn,this.Uranus.r)),n.incr(Ae(e,En,this.Neptune.r)),n}}class tn{constructor(e,n,o,a){this.tt=e,this.r=n,this.v=o,this.a=a}clone(){return new tn(this.tt,this.r.clone(),this.v.clone(),this.a.clone())}}class tt{constructor(e,n){this.bary=e,this.grav=n}}function Xe(t,e,n,o){return new f0(e.x+t*(n.x+t*o.x/2),e.y+t*(n.y+t*o.y/2),e.z+t*(n.z+t*o.z/2))}function Hn(t,e,n){return new f0(e.x+t*n.x,e.y+t*n.y,e.z+t*n.z)}function An(t,e){const n=t-e.tt,o=new Mn(t),a=Xe(n,e.r,e.v,e.a),c=o.Acceleration(a).mean(e.a),l=Xe(n,e.r,e.v,c),v=e.v.add(c.mul(n)),u=o.Acceleration(l),E=new tn(t,l,v,u);return new tt(o,E)}const Lr=[];function rt(t,e){const n=Math.floor(t);return n<0?0:n>=e?e-1:n}function Cn(t){const e=Pr(t),n=new Mn(e.tt),o=e.r.add(n.Sun.r),a=e.v.add(n.Sun.v),c=n.Acceleration(o),l=new tn(e.tt,o,a,c);return new tt(n,l)}function Fr(t,e){const n=se[0][0];if(e<n||e>se[Rn-1][0])return null;const o=rt((e-n)/Or,Rn-1);if(!t[o]){const c=t[o]=[];c[0]=Cn(se[o]).grav,c[$0-1]=Cn(se[o+1]).grav;let l,v=c[0].tt;for(l=1;l<$0-1;++l)c[l]=An(v+=We,c[l-1]).grav;v=c[$0-1].tt;var a=[];for(a[$0-1]=c[$0-1],l=$0-2;l>0;--l)a[l]=An(v-=We,a[l+1]).grav;for(l=$0-2;l>0;--l){const u=l/($0-1);c[l].r=c[l].r.mul(1-u).add(a[l].r.mul(u)),c[l].v=c[l].v.mul(1-u).add(a[l].v.mul(u)),c[l].a=c[l].a.mul(1-u).add(a[l].a.mul(u))}}return t[o]}function zn(t,e,n){let o=Cn(t);const a=Math.ceil((e-o.grav.tt)/n);for(let c=0;c<a;++c)o=An(c+1===a?e:o.grav.tt+n,o.grav);return o}function br(t,e){let n,o,a;const c=Fr(Lr,t.tt);if(c){const l=rt((t.tt-c[0].tt)/We,$0-1),v=c[l],u=c[l+1],E=v.a.mean(u.a),S=Xe(t.tt-v.tt,v.r,v.v,E),g=Hn(t.tt-v.tt,v.v,E),I=Xe(t.tt-u.tt,u.r,u.v,E),N=Hn(t.tt-u.tt,u.v,E),O=(t.tt-v.tt)/We;n=S.mul(1-O).add(I.mul(O)),o=g.mul(1-O).add(N.mul(O))}else{let l;t.tt<se[0][0]?l=zn(se[0],t.tt,-146):l=zn(se[Rn-1],t.tt,146),n=l.grav.r,o=l.grav.v,a=l.bary}return a||(a=new Mn(t.tt)),n=n.sub(a.Sun.r),o=o.sub(a.Sun.v),new Mr(n.x,n.y,n.z,o.x,o.y,o.z,t)}function Ie(t,e){var n=ue(e);if(t in he)return Ze(he[t],n);if(t===k.Pluto){const l=br(n);return new F0(l.x,l.y,l.z,n)}if(t===k.Sun)return new F0(0,0,0,n);if(t===k.Moon){var o=Ze(he.Earth,n),a=Sn(n);return new F0(o.x+a.x,o.y+a.y,o.z+a.z,n)}if(t===k.EMB){const l=Ze(he.Earth,n),v=Sn(n),u=1+fr;return new F0(l.x+v.x/u,l.y+v.y/u,l.z+v.z/u,n)}if(t===k.SSB)return Ur(n);const c=Kn(t);if(c){const l=new Dr(c.dec,15*c.ra,c.dist);return Br(l,n)}throw`HelioVector: Unknown body "${t}"`}function Hr(t,e){let n=e,o=0;for(let a=0;a<10;++a){const c=t(n),l=c.Length()/ar;if(l>1)throw"Object is too distant for light-travel solver.";const v=e.AddDays(-l);if(o=Math.abs(v.tt-n.tt),o<1e-9)return c;n=v}throw`Light-travel time solver did not converge: dt = ${o}`}class zr{constructor(e,n,o,a){this.observerBody=e,this.targetBody=n,this.aberration=o,this.observerPos=a}Position(e){this.aberration&&(this.observerPos=Ie(this.observerBody,e));const n=Ie(this.targetBody,e);return new F0(n.x-this.observerPos.x,n.y-this.observerPos.y,n.z-this.observerPos.z,e)}}function Gr(t,e,n,o){const a=ue(t);if(Kn(n)){const v=Ie(n,a),u=Ie(e,a);return new F0(v.x-u.x,v.y-u.y,v.z-u.z,a)}let c;c=Ie(e,a);const l=new zr(e,n,o,c);return Hr(v=>l.Position(v),a)}function kr(t,e,n){const o=ue(e);switch(t){case k.Earth:return new F0(0,0,0,o);case k.Moon:return Sn(o);default:const a=Gr(o,k.Earth,t,n);return a.t=o,a}}var Gn;(function(t){t[t.Pericenter=0]="Pericenter",t[t.Apocenter=1]="Apocenter"})(Gn||(Gn={}));function it(t,e){return new Ee([[e.rot[0][0]*t.rot[0][0]+e.rot[1][0]*t.rot[0][1]+e.rot[2][0]*t.rot[0][2],e.rot[0][1]*t.rot[0][0]+e.rot[1][1]*t.rot[0][1]+e.rot[2][1]*t.rot[0][2],e.rot[0][2]*t.rot[0][0]+e.rot[1][2]*t.rot[0][1]+e.rot[2][2]*t.rot[0][2]],[e.rot[0][0]*t.rot[1][0]+e.rot[1][0]*t.rot[1][1]+e.rot[2][0]*t.rot[1][2],e.rot[0][1]*t.rot[1][0]+e.rot[1][1]*t.rot[1][1]+e.rot[2][1]*t.rot[1][2],e.rot[0][2]*t.rot[1][0]+e.rot[1][2]*t.rot[1][1]+e.rot[2][2]*t.rot[1][2]],[e.rot[0][0]*t.rot[2][0]+e.rot[1][0]*t.rot[2][1]+e.rot[2][0]*t.rot[2][2],e.rot[0][1]*t.rot[2][0]+e.rot[1][1]*t.rot[2][1]+e.rot[2][1]*t.rot[2][2],e.rot[0][2]*t.rot[2][0]+e.rot[1][2]*t.rot[2][1]+e.rot[2][2]*t.rot[2][2]]])}function Br(t,e){e=ue(e);const n=t.lat*me,o=t.lon*me,a=t.dist*Math.cos(n);return new F0(a*Math.cos(o),a*Math.sin(o),t.dist*Math.sin(n),e)}function Vr(t){t=ue(t);const e=et(t,q0.From2000),n=xr(t,q0.From2000);return it(e,n)}var kn;(function(t){t.Penumbral="penumbral",t.Partial="partial",t.Annular="annular",t.Total="total"})(kn||(kn={}));var Bn;(function(t){t[t.Invalid=0]="Invalid",t[t.Ascending=1]="Ascending",t[t.Descending=-1]="Descending"})(Bn||(Bn={}));const Zr=new d.Matrix4;function Wr(t){const e=Math.cos(t),n=Math.sin(t);return new Ee([[e,-n,0],[n,e,0],[0,0,1]])}function Oe(t){return t instanceof ie?t:new ie(t instanceof Date?t:new Date(t))}function ot(t,e=new d.Matrix4){const n=Oe(t),o=Vr(n),a=Wr(Ir(n)*(-Math.PI/12)),{rot:c}=it(o,a);return e.set(c[0][0],c[0][1],c[0][2],0,c[1][0],c[1][1],c[1][2],0,c[2][0],c[2][1],c[2][2],0,0,0,0,1)}function Dn(t,e,n){const{x:o,y:a,z:c}=kr(t,e,!1);return n.set(o,a,c).normalize()}function at(t,e,n){const o=ot(e,Zr);return Dn(t,e,n).applyMatrix4(o)}function Xr(t,e=new d.Vector3){return Dn(k.Sun,Oe(t),e)}function Yr(t,e=new d.Vector3){return Dn(k.Moon,Oe(t),e)}function $r(t,e=new d.Vector3){return at(k.Sun,Oe(t),e)}function jr(t,e=new d.Vector3){return at(k.Moon,Oe(t),e)}function st(t){return Math.sqrt(Math.max(t,0))}function qr(t){return Math.max(t,0)}function Kr(t,e,n){const{bottomRadius:o}=t;return n<0&&e**2*(n**2-1)+o**2>=0}function Jr(t,e,n){const{topRadius:o}=t,a=e**2*(n**2-1)+o**2;return qr(-e*n+st(a))}function Ye(t,e){return .5/e+t*(1-1/e)}var Qr=process.env.NODE_ENV==="production",Vn="Invariant failed";function ei(t,e){if(!t){if(Qr)throw new Error(Vn);var n=Vn;throw new Error(n)}}const ni=new d.Vector3,Zn=new d.Vector3,ti=new d.Vector3;function Be(t,e,n){const o=e*4;return n.set(t[o],t[o+1],t[o+2])}function ct(t,e,n){const{width:o,height:a}=t.image;ei(D.isTypedArray(t.image.data));let c=t.image.data;t.type===d.HalfFloatType&&c instanceof Uint16Array&&(c=new D.Float16Array(c.buffer));const l=D.clamp(e.x,0,1)*(o-1),v=D.clamp(e.y,0,1)*(a-1),u=Math.floor(l),E=Math.floor(v),S=l-u,g=v-E,I=S,N=g,O=u%o,P=(O+1)%o,H=E%a,J=(H+1)%a,t0=Be(c,H*o+O,ni),r0=Be(c,H*o+P,Zn),c0=t0.lerp(r0,I),E0=Be(c,J*o+O,Zn),l0=Be(c,J*o+P,ti),h0=E0.lerp(l0,I);return n.copy(c0.lerp(h0,N))}function ri(t,e,n,o){const{topRadius:a,bottomRadius:c}=t,l=Math.sqrt(a**2-c**2),v=st(e**2-c**2),u=Jr(t,e,n),E=a-e,S=v+l,g=(u-E)/(S-E),I=v/l;return o.set(Ye(g,Ne),Ye(I,Ue))}const ii=new d.Vector3,sn=new d.Vector3,oi=new d.Vector2;function lt(t,e,n,o=new d.Color,{ellipsoid:a=D.Ellipsoid.WGS84,correctAltitude:c=!0,photometric:l=!0}={},v=oe.DEFAULT){const u=ii.copy(e);if(c){const P=a.projectOnSurface(e,sn);P!=null&&u.sub(a.getOsculatingSphereCenter(P,v.bottomRadius,sn))}const E=sn;let S=u.length(),g=u.dot(n);const{topRadius:I}=v,N=-g-Math.sqrt(g**2-S**2+I**2);if(N>0&&(S=I,g+=N),S>I)E.set(1,1,1);else{const P=g/S;if(Kr(v,S,P))E.setScalar(0);else{const J=ri(v,S,P,oi);ct(t,J,E)}}const O=E.multiply(v.solarIrradiance);return l&&O.multiply(v.sunRadianceToRelativeLuminance),o.setFromVector3(O)}const ai=parseInt(d.REVISION.replace(/\D+/g,""));var x0=Uint8Array,re=Uint16Array,yn=Uint32Array,ut=new x0([0,0,0,0,0,0,0,0,1,1,1,1,2,2,2,2,3,3,3,3,4,4,4,4,5,5,5,5,0,0,0,0]),dt=new x0([0,0,0,0,1,1,2,2,3,3,4,4,5,5,6,6,7,7,8,8,9,9,10,10,11,11,12,12,13,13,0,0]),si=new x0([16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15]),vt=function(t,e){for(var n=new re(31),o=0;o<31;++o)n[o]=e+=1<<t[o-1];for(var a=new yn(n[30]),o=1;o<30;++o)for(var c=n[o];c<n[o+1];++c)a[c]=c-n[o]<<5|o;return[n,a]},ft=vt(ut,2),ht=ft[0],ci=ft[1];ht[28]=258,ci[258]=28;var li=vt(dt,0),ui=li[0],In=new re(32768);for(var j=0;j<32768;++j){var te=(j&43690)>>>1|(j&21845)<<1;te=(te&52428)>>>2|(te&13107)<<2,te=(te&61680)>>>4|(te&3855)<<4,In[j]=((te&65280)>>>8|(te&255)<<8)>>>1}var xe=function(t,e,n){for(var o=t.length,a=0,c=new re(e);a<o;++a)++c[t[a]-1];var l=new re(e);for(a=0;a<e;++a)l[a]=l[a-1]+c[a-1]<<1;var v;if(n){v=new re(1<<e);var u=15-e;for(a=0;a<o;++a)if(t[a])for(var E=a<<4|t[a],S=e-t[a],g=l[t[a]-1]++<<S,I=g|(1<<S)-1;g<=I;++g)v[In[g]>>>u]=E}else for(v=new re(o),a=0;a<o;++a)t[a]&&(v[a]=In[l[t[a]-1]++]>>>15-t[a]);return v},Pe=new x0(288);for(var j=0;j<144;++j)Pe[j]=8;for(var j=144;j<256;++j)Pe[j]=9;for(var j=256;j<280;++j)Pe[j]=7;for(var j=280;j<288;++j)Pe[j]=8;var pt=new x0(32);for(var j=0;j<32;++j)pt[j]=5;var di=xe(Pe,9,1),vi=xe(pt,5,1),cn=function(t){for(var e=t[0],n=1;n<t.length;++n)t[n]>e&&(e=t[n]);return e},L0=function(t,e,n){var o=e/8|0;return(t[o]|t[o+1]<<8)>>(e&7)&n},ln=function(t,e){var n=e/8|0;return(t[n]|t[n+1]<<8|t[n+2]<<16)>>(e&7)},fi=function(t){return(t/8|0)+(t&7&&1)},hi=function(t,e,n){(n==null||n>t.length)&&(n=t.length);var o=new(t instanceof re?re:t instanceof yn?yn:x0)(n-e);return o.set(t.subarray(e,n)),o},pi=function(t,e,n){var o=t.length;if(!o||n&&!n.l&&o<5)return e||new x0(0);var a=!e||n,c=!n||n.i;n||(n={}),e||(e=new x0(o*3));var l=function(G){var O0=e.length;if(G>O0){var R0=new x0(Math.max(O0*2,G));R0.set(e),e=R0}},v=n.f||0,u=n.p||0,E=n.b||0,S=n.l,g=n.d,I=n.m,N=n.n,O=o*8;do{if(!S){n.f=v=L0(t,u,1);var P=L0(t,u+1,3);if(u+=3,P)if(P==1)S=di,g=vi,I=9,N=5;else if(P==2){var r0=L0(t,u,31)+257,c0=L0(t,u+10,15)+4,E0=r0+L0(t,u+5,31)+1;u+=14;for(var l0=new x0(E0),h0=new x0(19),n0=0;n0<c0;++n0)h0[si[n0]]=L0(t,u+n0*3,7);u+=c0*3;for(var b0=cn(h0),K0=(1<<b0)-1,H0=xe(h0,b0,1),n0=0;n0<E0;){var u0=H0[L0(t,u,K0)];u+=u0&15;var H=u0>>>4;if(H<16)l0[n0++]=H;else{var w0=0,_0=0;for(H==16?(_0=3+L0(t,u,3),u+=2,w0=l0[n0-1]):H==17?(_0=3+L0(t,u,7),u+=3):H==18&&(_0=11+L0(t,u,127),u+=7);_0--;)l0[n0++]=w0}}var k0=l0.subarray(0,r0),p0=l0.subarray(r0);I=cn(k0),N=cn(p0),S=xe(k0,I,1),g=xe(p0,N,1)}else throw"invalid block type";else{var H=fi(u)+4,J=t[H-4]|t[H-3]<<8,t0=H+J;if(t0>o){if(c)throw"unexpected EOF";break}a&&l(E+J),e.set(t.subarray(H,t0),E),n.b=E+=J,n.p=u=t0*8;continue}if(u>O){if(c)throw"unexpected EOF";break}}a&&l(E+131072);for(var B0=(1<<I)-1,V0=(1<<N)-1,J0=u;;J0=u){var w0=S[ln(t,u)&B0],F=w0>>>4;if(u+=w0&15,u>O){if(c)throw"unexpected EOF";break}if(!w0)throw"invalid length/literal";if(F<256)e[E++]=F;else if(F==256){J0=u,S=null;break}else{var D0=F-254;if(F>264){var n0=F-257,a0=ut[n0];D0=L0(t,u,(1<<a0)-1)+ht[n0],u+=a0}var N0=g[ln(t,u)&V0],U0=N0>>>4;if(!N0)throw"invalid distance";u+=N0&15;var p0=ui[U0];if(U0>3){var a0=dt[U0];p0+=ln(t,u)&(1<<a0)-1,u+=a0}if(u>O){if(c)throw"unexpected EOF";break}a&&l(E+131072);for(var Z0=E+D0;E<Z0;E+=4)e[E]=e[E-p0],e[E+1]=e[E+1-p0],e[E+2]=e[E+2-p0],e[E+3]=e[E+3-p0];E=Z0}}n.l=S,n.p=J0,n.b=E,S&&(v=1,n.m=I,n.d=g,n.n=N)}while(!v);return E==e.length?e:hi(e,0,E)},mi=new x0(0),Ei=function(t){if((t[0]&15)!=8||t[0]>>>4>7||(t[0]<<8|t[1])%31)throw"invalid zlib data";if(t[1]&32)throw"invalid zlib data: preset dictionaries not supported"};function Ve(t,e){return pi((Ei(t),t.subarray(2,-4)),e)}var Si=typeof TextDecoder<"u"&&new TextDecoder,_i=0;try{Si.decode(mi,{stream:!0}),_i=1}catch{}const Ce=ai>=152;class Wn extends d.DataTextureLoader{constructor(e){super(e),this.type=d.HalfFloatType}parse(e){const b0=Math.pow(2.7182818,2.2);function K0(r,i){for(var s=0,f=0;f<65536;++f)(f==0||r[f>>3]&1<<(f&7))&&(i[s++]=f);for(var h=s-1;s<65536;)i[s++]=0;return h}function H0(r){for(var i=0;i<16384;i++)r[i]={},r[i].len=0,r[i].lit=0,r[i].p=null}const u0={l:0,c:0,lc:0};function w0(r,i,s,f,h){for(;s<r;)i=i<<8|Pn(f,h),s+=8;s-=r,u0.l=i>>s&(1<<r)-1,u0.c=i,u0.lc=s}const _0=new Array(59);function k0(r){for(var i=0;i<=58;++i)_0[i]=0;for(var i=0;i<65537;++i)_0[r[i]]+=1;for(var s=0,i=58;i>0;--i){var f=s+_0[i]>>1;_0[i]=s,s=f}for(var i=0;i<65537;++i){var h=r[i];h>0&&(r[i]=h|_0[h]++<<6)}}function p0(r,i,s,f,h,p,T){for(var _=s,A=0,R=0;h<=p;h++){if(_.value-s.value>f)return!1;w0(6,A,R,r,_);var C=u0.l;if(A=u0.c,R=u0.lc,T[h]=C,C==63){if(_.value-s.value>f)throw"Something wrong with hufUnpackEncTable";w0(8,A,R,r,_);var w=u0.l+6;if(A=u0.c,R=u0.lc,h+w>p+1)throw"Something wrong with hufUnpackEncTable";for(;w--;)T[h++]=0;h--}else if(C>=59){var w=C-59+2;if(h+w>p+1)throw"Something wrong with hufUnpackEncTable";for(;w--;)T[h++]=0;h--}}k0(T)}function B0(r){return r&63}function V0(r){return r>>6}function J0(r,i,s,f){for(;i<=s;i++){var h=V0(r[i]),p=B0(r[i]);if(h>>p)throw"Invalid table entry";if(p>14){var T=f[h>>p-14];if(T.len)throw"Invalid table entry";if(T.lit++,T.p){var _=T.p;T.p=new Array(T.lit);for(var A=0;A<T.lit-1;++A)T.p[A]=_[A]}else T.p=new Array(1);T.p[T.lit-1]=i}else if(p)for(var R=0,A=1<<14-p;A>0;A--){var T=f[(h<<14-p)+R];if(T.len||T.p)throw"Invalid table entry";T.len=p,T.lit=i,R++}}return!0}const F={c:0,lc:0};function D0(r,i,s,f){r=r<<8|Pn(s,f),i+=8,F.c=r,F.lc=i}const a0={c:0,lc:0};function N0(r,i,s,f,h,p,T,_,A,R){if(r==i){f<8&&(D0(s,f,h,T),s=F.c,f=F.lc),f-=8;var C=s>>f,C=new Uint8Array([C])[0];if(A.value+C>R)return!1;for(var w=_[A.value-1];C-- >0;)_[A.value++]=w}else if(A.value<R)_[A.value++]=r;else return!1;a0.c=s,a0.lc=f}function U0(r){return r&65535}function Z0(r){var i=U0(r);return i>32767?i-65536:i}const G={a:0,b:0};function O0(r,i){var s=Z0(r),f=Z0(i),h=f,p=s+(h&1)+(h>>1),T=p,_=p-h;G.a=T,G.b=_}function R0(r,i){var s=U0(r),f=U0(i),h=s-(f>>1)&65535,p=f+h-32768&65535;G.a=p,G.b=h}function m(r,i,s,f,h,p,T){for(var _=T<16384,A=s>h?h:s,R=1,C;R<=A;)R<<=1;for(R>>=1,C=R,R>>=1;R>=1;){for(var w=0,Q=w+p*(h-C),x=p*R,M=p*C,U=f*R,L=f*C,Z,X,o0,m0;w<=Q;w+=M){for(var Y=w,G0=w+f*(s-C);Y<=G0;Y+=L){var $=Y+U,s0=Y+x,W0=s0+U;_?(O0(r[Y+i],r[s0+i]),Z=G.a,o0=G.b,O0(r[$+i],r[W0+i]),X=G.a,m0=G.b,O0(Z,X),r[Y+i]=G.a,r[$+i]=G.b,O0(o0,m0),r[s0+i]=G.a,r[W0+i]=G.b):(R0(r[Y+i],r[s0+i]),Z=G.a,o0=G.b,R0(r[$+i],r[W0+i]),X=G.a,m0=G.b,R0(Z,X),r[Y+i]=G.a,r[$+i]=G.b,R0(o0,m0),r[s0+i]=G.a,r[W0+i]=G.b)}if(s&R){var s0=Y+x;_?O0(r[Y+i],r[s0+i]):R0(r[Y+i],r[s0+i]),Z=G.a,r[s0+i]=G.b,r[Y+i]=Z}}if(h&R)for(var Y=w,G0=w+f*(s-C);Y<=G0;Y+=L){var $=Y+U;_?O0(r[Y+i],r[$+i]):R0(r[Y+i],r[$+i]),Z=G.a,r[$+i]=G.b,r[Y+i]=Z}C=R,R>>=1}return w}function A0(r,i,s,f,h,p,T,_,A,R){for(var C=0,w=0,Q=_,x=Math.trunc(h.value+(p+7)/8);h.value<x;)for(D0(C,w,s,h),C=F.c,w=F.lc;w>=14;){var M=C>>w-14&16383,U=i[M];if(U.len)w-=U.len,N0(U.lit,T,C,w,s,f,h,A,R,Q),C=a0.c,w=a0.lc;else{if(!U.p)throw"hufDecode issues";var L;for(L=0;L<U.lit;L++){for(var Z=B0(r[U.p[L]]);w<Z&&h.value<x;)D0(C,w,s,h),C=F.c,w=F.lc;if(w>=Z&&V0(r[U.p[L]])==(C>>w-Z&(1<<Z)-1)){w-=Z,N0(U.p[L],T,C,w,s,f,h,A,R,Q),C=a0.c,w=a0.lc;break}}if(L==U.lit)throw"hufDecode issues"}}var X=8-p&7;for(C>>=X,w-=X;w>0;){var U=i[C<<14-w&16383];if(U.len)w-=U.len,N0(U.lit,T,C,w,s,f,h,A,R,Q),C=a0.c,w=a0.lc;else throw"hufDecode issues"}return!0}function Le(r,i,s,f,h,p){var T={value:0},_=s.value,A=S0(i,s),R=S0(i,s);s.value+=4;var C=S0(i,s);if(s.value+=4,A<0||A>=65537||R<0||R>=65537)throw"Something wrong with HUF_ENCSIZE";var w=new Array(65537),Q=new Array(16384);H0(Q);var x=f-(s.value-_);if(p0(r,i,s,x,A,R,w),C>8*(f-(s.value-_)))throw"Something wrong with hufUncompress";J0(w,A,R,Q),A0(w,Q,r,i,s,C,R,p,h,T)}function z(r,i,s){for(var f=0;f<s;++f)i[f]=r[i[f]]}function B(r){for(var i=1;i<r.length;i++){var s=r[i-1]+r[i]-128;r[i]=s}}function q(r,i){for(var s=0,f=Math.floor((r.length+1)/2),h=0,p=r.length-1;!(h>p||(i[h++]=r[s++],h>p));)i[h++]=r[f++]}function e0(r){for(var i=r.byteLength,s=new Array,f=0,h=new DataView(r);i>0;){var p=h.getInt8(f++);if(p<0){var T=-p;i-=T+1;for(var _=0;_<T;_++)s.push(h.getUint8(f++))}else{var T=p;i-=2;for(var A=h.getUint8(f++),_=0;_<T+1;_++)s.push(A)}}return s}function i0(r,i,s,f,h,p){var $=new DataView(p.buffer),T=s[r.idx[0]].width,_=s[r.idx[0]].height,A=3,R=Math.floor(T/8),C=Math.ceil(T/8),w=Math.ceil(_/8),Q=T-(C-1)*8,x=_-(w-1)*8,M={value:0},U=new Array(A),L=new Array(A),Z=new Array(A),X=new Array(A),o0=new Array(A);for(let W=0;W<A;++W)o0[W]=i[r.idx[W]],U[W]=W<1?0:U[W-1]+C*w,L[W]=new Float32Array(64),Z[W]=new Uint16Array(64),X[W]=new Uint16Array(C*64);for(let W=0;W<w;++W){var m0=8;W==w-1&&(m0=x);var Y=8;for(let K=0;K<C;++K){K==C-1&&(Y=Q);for(let V=0;V<A;++V)Z[V].fill(0),Z[V][0]=h[U[V]++],z0(M,f,Z[V]),P0(Z[V],L[V]),Se(L[V]);Q0(L);for(let V=0;V<A;++V)wt(L[V],X[V],K*64)}let v0=0;for(let K=0;K<A;++K){const V=s[r.idx[K]].type;for(let I0=8*W;I0<8*W+m0;++I0){v0=o0[K][I0];for(let ae=0;ae<R;++ae){const T0=ae*64+(I0&7)*8;$.setUint16(v0+0*2*V,X[K][T0+0],!0),$.setUint16(v0+1*2*V,X[K][T0+1],!0),$.setUint16(v0+2*2*V,X[K][T0+2],!0),$.setUint16(v0+3*2*V,X[K][T0+3],!0),$.setUint16(v0+4*2*V,X[K][T0+4],!0),$.setUint16(v0+5*2*V,X[K][T0+5],!0),$.setUint16(v0+6*2*V,X[K][T0+6],!0),$.setUint16(v0+7*2*V,X[K][T0+7],!0),v0+=8*2*V}}if(R!=C)for(let I0=8*W;I0<8*W+m0;++I0){const ae=o0[K][I0]+8*R*2*V,T0=R*64+(I0&7)*8;for(let ee=0;ee<Y;++ee)$.setUint16(ae+ee*2*V,X[K][T0+ee],!0)}}}for(var G0=new Uint16Array(T),$=new DataView(p.buffer),s0=0;s0<A;++s0){s[r.idx[s0]].decoded=!0;var W0=s[r.idx[s0]].type;if(s[s0].type==2)for(var Re=0;Re<_;++Re){const W=o0[s0][Re];for(var y0=0;y0<T;++y0)G0[y0]=$.getUint16(W+y0*2*W0,!0);for(var y0=0;y0<T;++y0)$.setFloat32(W+y0*2*W0,y(G0[y0]),!0)}}}function z0(r,i,s){for(var f,h=1;h<64;)f=i[r.value],f==65280?h=64:f>>8==255?h+=f&255:(s[h]=f,h++),r.value++}function P0(r,i){i[0]=y(r[0]),i[1]=y(r[1]),i[2]=y(r[5]),i[3]=y(r[6]),i[4]=y(r[14]),i[5]=y(r[15]),i[6]=y(r[27]),i[7]=y(r[28]),i[8]=y(r[2]),i[9]=y(r[4]),i[10]=y(r[7]),i[11]=y(r[13]),i[12]=y(r[16]),i[13]=y(r[26]),i[14]=y(r[29]),i[15]=y(r[42]),i[16]=y(r[3]),i[17]=y(r[8]),i[18]=y(r[12]),i[19]=y(r[17]),i[20]=y(r[25]),i[21]=y(r[30]),i[22]=y(r[41]),i[23]=y(r[43]),i[24]=y(r[9]),i[25]=y(r[11]),i[26]=y(r[18]),i[27]=y(r[24]),i[28]=y(r[31]),i[29]=y(r[40]),i[30]=y(r[44]),i[31]=y(r[53]),i[32]=y(r[10]),i[33]=y(r[19]),i[34]=y(r[23]),i[35]=y(r[32]),i[36]=y(r[39]),i[37]=y(r[45]),i[38]=y(r[52]),i[39]=y(r[54]),i[40]=y(r[20]),i[41]=y(r[22]),i[42]=y(r[33]),i[43]=y(r[38]),i[44]=y(r[46]),i[45]=y(r[51]),i[46]=y(r[55]),i[47]=y(r[60]),i[48]=y(r[21]),i[49]=y(r[34]),i[50]=y(r[37]),i[51]=y(r[47]),i[52]=y(r[50]),i[53]=y(r[56]),i[54]=y(r[59]),i[55]=y(r[61]),i[56]=y(r[35]),i[57]=y(r[36]),i[58]=y(r[48]),i[59]=y(r[49]),i[60]=y(r[57]),i[61]=y(r[58]),i[62]=y(r[62]),i[63]=y(r[63])}function Se(r){const i=.5*Math.cos(.7853975),s=.5*Math.cos(3.14159/16),f=.5*Math.cos(3.14159/8),h=.5*Math.cos(3*3.14159/16),p=.5*Math.cos(5*3.14159/16),T=.5*Math.cos(3*3.14159/8),_=.5*Math.cos(7*3.14159/16);for(var A=new Array(4),R=new Array(4),C=new Array(4),w=new Array(4),Q=0;Q<8;++Q){var x=Q*8;A[0]=f*r[x+2],A[1]=T*r[x+2],A[2]=f*r[x+6],A[3]=T*r[x+6],R[0]=s*r[x+1]+h*r[x+3]+p*r[x+5]+_*r[x+7],R[1]=h*r[x+1]-_*r[x+3]-s*r[x+5]-p*r[x+7],R[2]=p*r[x+1]-s*r[x+3]+_*r[x+5]+h*r[x+7],R[3]=_*r[x+1]-p*r[x+3]+h*r[x+5]-s*r[x+7],C[0]=i*(r[x+0]+r[x+4]),C[3]=i*(r[x+0]-r[x+4]),C[1]=A[0]+A[3],C[2]=A[1]-A[2],w[0]=C[0]+C[1],w[1]=C[3]+C[2],w[2]=C[3]-C[2],w[3]=C[0]-C[1],r[x+0]=w[0]+R[0],r[x+1]=w[1]+R[1],r[x+2]=w[2]+R[2],r[x+3]=w[3]+R[3],r[x+4]=w[3]-R[3],r[x+5]=w[2]-R[2],r[x+6]=w[1]-R[1],r[x+7]=w[0]-R[0]}for(var M=0;M<8;++M)A[0]=f*r[16+M],A[1]=T*r[16+M],A[2]=f*r[48+M],A[3]=T*r[48+M],R[0]=s*r[8+M]+h*r[24+M]+p*r[40+M]+_*r[56+M],R[1]=h*r[8+M]-_*r[24+M]-s*r[40+M]-p*r[56+M],R[2]=p*r[8+M]-s*r[24+M]+_*r[40+M]+h*r[56+M],R[3]=_*r[8+M]-p*r[24+M]+h*r[40+M]-s*r[56+M],C[0]=i*(r[M]+r[32+M]),C[3]=i*(r[M]-r[32+M]),C[1]=A[0]+A[3],C[2]=A[1]-A[2],w[0]=C[0]+C[1],w[1]=C[3]+C[2],w[2]=C[3]-C[2],w[3]=C[0]-C[1],r[0+M]=w[0]+R[0],r[8+M]=w[1]+R[1],r[16+M]=w[2]+R[2],r[24+M]=w[3]+R[3],r[32+M]=w[3]-R[3],r[40+M]=w[2]-R[2],r[48+M]=w[1]-R[1],r[56+M]=w[0]-R[0]}function Q0(r){for(var i=0;i<64;++i){var s=r[0][i],f=r[1][i],h=r[2][i];r[0][i]=s+1.5747*h,r[1][i]=s-.1873*f-.4682*h,r[2][i]=s+1.8556*f}}function wt(r,i,s){for(var f=0;f<64;++f)i[s+f]=d.DataUtils.toHalfFloat(Rt(r[f]))}function Rt(r){return r<=1?Math.sign(r)*Math.pow(Math.abs(r),2.2):Math.sign(r)*Math.pow(b0,Math.abs(r)-1)}function Un(r){return new DataView(r.array.buffer,r.offset.value,r.size)}function At(r){var i=r.viewer.buffer.slice(r.offset.value,r.offset.value+r.size),s=new Uint8Array(e0(i)),f=new Uint8Array(s.length);return B(s),q(s,f),new DataView(f.buffer)}function rn(r){var i=r.array.slice(r.offset.value,r.offset.value+r.size),s=Ve(i),f=new Uint8Array(s.length);return B(s),q(s,f),new DataView(f.buffer)}function Ct(r){for(var i=r.viewer,s={value:r.offset.value},f=new Uint16Array(r.width*r.scanlineBlockSize*(r.channels*r.type)),h=new Uint8Array(8192),p=0,T=new Array(r.channels),_=0;_<r.channels;_++)T[_]={},T[_].start=p,T[_].end=T[_].start,T[_].nx=r.width,T[_].ny=r.lines,T[_].size=r.type,p+=T[_].nx*T[_].ny*T[_].size;var A=Te(i,s),R=Te(i,s);if(R>=8192)throw"Something is wrong with PIZ_COMPRESSION BITMAP_SIZE";if(A<=R)for(var _=0;_<R-A+1;_++)h[_+A]=de(i,s);var C=new Uint16Array(65536),w=K0(h,C),Q=S0(i,s);Le(r.array,i,s,Q,f,p);for(var _=0;_<r.channels;++_)for(var x=T[_],M=0;M<T[_].size;++M)m(f,x.start+M,x.nx,x.size,x.ny,x.nx*x.size,w);z(C,f,p);for(var U=0,L=new Uint8Array(f.buffer.byteLength),Z=0;Z<r.lines;Z++)for(var X=0;X<r.channels;X++){var x=T[X],o0=x.nx*x.size,m0=new Uint8Array(f.buffer,x.end*2,o0*2);L.set(m0,U),U+=o0*2,x.end+=o0}return new DataView(L.buffer)}function yt(r){var i=r.array.slice(r.offset.value,r.offset.value+r.size),s=Ve(i);const f=r.lines*r.channels*r.width,h=r.type==1?new Uint16Array(f):new Uint32Array(f);let p=0,T=0;const _=new Array(4);for(let A=0;A<r.lines;A++)for(let R=0;R<r.channels;R++){let C=0;switch(r.type){case 1:_[0]=p,_[1]=_[0]+r.width,p=_[1]+r.width;for(let w=0;w<r.width;++w){const Q=s[_[0]++]<<8|s[_[1]++];C+=Q,h[T]=C,T++}break;case 2:_[0]=p,_[1]=_[0]+r.width,_[2]=_[1]+r.width,p=_[2]+r.width;for(let w=0;w<r.width;++w){const Q=s[_[0]++]<<24|s[_[1]++]<<16|s[_[2]++]<<8;C+=Q,h[T]=C,T++}break}}return new DataView(h.buffer)}function On(r){var i=r.viewer,s={value:r.offset.value},f=new Uint8Array(r.width*r.lines*(r.channels*r.type*2)),h={version:C0(i,s),unknownUncompressedSize:C0(i,s),unknownCompressedSize:C0(i,s),acCompressedSize:C0(i,s),dcCompressedSize:C0(i,s),rleCompressedSize:C0(i,s),rleUncompressedSize:C0(i,s),rleRawSize:C0(i,s),totalAcUncompressedCount:C0(i,s),totalDcUncompressedCount:C0(i,s),acCompression:C0(i,s)};if(h.version<2)throw"EXRLoader.parse: "+we.compression+" version "+h.version+" is unsupported";for(var p=new Array,T=Te(i,s)-2;T>0;){var _=Fe(i.buffer,s),A=de(i,s),R=A>>2&3,C=(A>>4)-1,w=new Int8Array([C])[0],Q=de(i,s);p.push({name:_,index:w,type:Q,compression:R}),T-=_.length+3}for(var x=we.channels,M=new Array(r.channels),U=0;U<r.channels;++U){var L=M[U]={},Z=x[U];L.name=Z.name,L.compression=0,L.decoded=!1,L.type=Z.pixelType,L.pLinear=Z.pLinear,L.width=r.width,L.height=r.lines}for(var X={idx:new Array(3)},o0=0;o0<r.channels;++o0)for(var L=M[o0],U=0;U<p.length;++U){var m0=p[U];L.name==m0.name&&(L.compression=m0.compression,m0.index>=0&&(X.idx[m0.index]=o0),L.offset=o0)}if(h.acCompressedSize>0)switch(h.acCompression){case 0:var $=new Uint16Array(h.totalAcUncompressedCount);Le(r.array,i,s,h.acCompressedSize,$,h.totalAcUncompressedCount);break;case 1:var Y=r.array.slice(s.value,s.value+h.totalAcUncompressedCount),G0=Ve(Y),$=new Uint16Array(G0.buffer);s.value+=h.totalAcUncompressedCount;break}if(h.dcCompressedSize>0){var s0={array:r.array,offset:s,size:h.dcCompressedSize},W0=new Uint16Array(rn(s0).buffer);s.value+=h.dcCompressedSize}if(h.rleRawSize>0){var Y=r.array.slice(s.value,s.value+h.rleCompressedSize),G0=Ve(Y),Re=e0(G0.buffer);s.value+=h.rleCompressedSize}for(var y0=0,W=new Array(M.length),U=0;U<W.length;++U)W[U]=new Array;for(var v0=0;v0<r.lines;++v0)for(var K=0;K<M.length;++K)W[K].push(y0),y0+=M[K].width*r.type*2;i0(X,W,M,$,W0,f);for(var U=0;U<M.length;++U){var L=M[U];if(!L.decoded)switch(L.compression){case 2:for(var V=0,I0=0,v0=0;v0<r.lines;++v0){for(var ae=W[U][V],T0=0;T0<L.width;++T0){for(var ee=0;ee<2*L.type;++ee)f[ae++]=Re[I0+ee*L.width*L.height];I0++}V++}break;case 1:default:throw"EXRLoader.parse: unsupported channel compression"}}return new DataView(f.buffer)}function Fe(r,i){for(var s=new Uint8Array(r),f=0;s[i.value+f]!=0;)f+=1;var h=new TextDecoder().decode(s.slice(i.value,i.value+f));return i.value=i.value+f+1,h}function It(r,i,s){var f=new TextDecoder().decode(new Uint8Array(r).slice(i.value,i.value+s));return i.value=i.value+s,f}function xt(r,i){var s=_e(r,i),f=S0(r,i);return[s,f]}function Mt(r,i){var s=S0(r,i),f=S0(r,i);return[s,f]}function _e(r,i){var s=r.getInt32(i.value,!0);return i.value=i.value+4,s}function S0(r,i){var s=r.getUint32(i.value,!0);return i.value=i.value+4,s}function Pn(r,i){var s=r[i.value];return i.value=i.value+1,s}function de(r,i){var s=r.getUint8(i.value);return i.value=i.value+1,s}const C0=function(r,i){let s;return"getBigInt64"in DataView.prototype?s=Number(r.getBigInt64(i.value,!0)):s=r.getUint32(i.value+4,!0)+Number(r.getUint32(i.value,!0)<<32),i.value+=8,s};function d0(r,i){var s=r.getFloat32(i.value,!0);return i.value+=4,s}function Dt(r,i){return d.DataUtils.toHalfFloat(d0(r,i))}function y(r){var i=(r&31744)>>10,s=r&1023;return(r>>15?-1:1)*(i?i===31?s?NaN:1/0:Math.pow(2,i-15)*(1+s/1024):6103515625e-14*(s/1024))}function Te(r,i){var s=r.getUint16(i.value,!0);return i.value+=2,s}function Nt(r,i){return y(Te(r,i))}function Ut(r,i,s,f){for(var h=s.value,p=[];s.value<h+f-1;){var T=Fe(i,s),_=_e(r,s),A=de(r,s);s.value+=3;var R=_e(r,s),C=_e(r,s);p.push({name:T,pixelType:_,pLinear:A,xSampling:R,ySampling:C})}return s.value+=1,p}function Ot(r,i){var s=d0(r,i),f=d0(r,i),h=d0(r,i),p=d0(r,i),T=d0(r,i),_=d0(r,i),A=d0(r,i),R=d0(r,i);return{redX:s,redY:f,greenX:h,greenY:p,blueX:T,blueY:_,whiteX:A,whiteY:R}}function Pt(r,i){var s=["NO_COMPRESSION","RLE_COMPRESSION","ZIPS_COMPRESSION","ZIP_COMPRESSION","PIZ_COMPRESSION","PXR24_COMPRESSION","B44_COMPRESSION","B44A_COMPRESSION","DWAA_COMPRESSION","DWAB_COMPRESSION"],f=de(r,i);return s[f]}function Lt(r,i){var s=S0(r,i),f=S0(r,i),h=S0(r,i),p=S0(r,i);return{xMin:s,yMin:f,xMax:h,yMax:p}}function Ft(r,i){var s=["INCREASING_Y"],f=de(r,i);return s[f]}function bt(r,i){var s=d0(r,i),f=d0(r,i);return[s,f]}function Ht(r,i){var s=d0(r,i),f=d0(r,i),h=d0(r,i);return[s,f,h]}function zt(r,i,s,f,h){if(f==="string"||f==="stringvector"||f==="iccProfile")return It(i,s,h);if(f==="chlist")return Ut(r,i,s,h);if(f==="chromaticities")return Ot(r,s);if(f==="compression")return Pt(r,s);if(f==="box2i")return Lt(r,s);if(f==="lineOrder")return Ft(r,s);if(f==="float")return d0(r,s);if(f==="v2f")return bt(r,s);if(f==="v3f")return Ht(r,s);if(f==="int")return _e(r,s);if(f==="rational")return xt(r,s);if(f==="timecode")return Mt(r,s);if(f==="preview")return s.value+=h,"skipped";s.value+=h}function Gt(r,i,s){const f={};if(r.getUint32(0,!0)!=20000630)throw"THREE.EXRLoader: provided file doesn't appear to be in OpenEXR format.";f.version=r.getUint8(4);const h=r.getUint8(5);f.spec={singleTile:!!(h&2),longName:!!(h&4),deepFormat:!!(h&8),multiPart:!!(h&16)},s.value=8;for(var p=!0;p;){var T=Fe(i,s);if(T==0)p=!1;else{var _=Fe(i,s),A=S0(r,s),R=zt(r,i,s,_,A);R===void 0?console.warn(`EXRLoader.parse: skipped unknown header attribute type '${_}'.`):f[T]=R}}if((h&-5)!=0)throw console.error("EXRHeader:",f),"THREE.EXRLoader: provided file is currently unsupported.";return f}function kt(r,i,s,f,h){const p={size:0,viewer:i,array:s,offset:f,width:r.dataWindow.xMax-r.dataWindow.xMin+1,height:r.dataWindow.yMax-r.dataWindow.yMin+1,channels:r.channels.length,bytesPerLine:null,lines:null,inputSize:null,type:r.channels[0].pixelType,uncompress:null,getter:null,format:null,[Ce?"colorSpace":"encoding"]:null};switch(r.compression){case"NO_COMPRESSION":p.lines=1,p.uncompress=Un;break;case"RLE_COMPRESSION":p.lines=1,p.uncompress=At;break;case"ZIPS_COMPRESSION":p.lines=1,p.uncompress=rn;break;case"ZIP_COMPRESSION":p.lines=16,p.uncompress=rn;break;case"PIZ_COMPRESSION":p.lines=32,p.uncompress=Ct;break;case"PXR24_COMPRESSION":p.lines=16,p.uncompress=yt;break;case"DWAA_COMPRESSION":p.lines=32,p.uncompress=On;break;case"DWAB_COMPRESSION":p.lines=256,p.uncompress=On;break;default:throw"EXRLoader.parse: "+r.compression+" is unsupported"}if(p.scanlineBlockSize=p.lines,p.type==1)switch(h){case d.FloatType:p.getter=Nt,p.inputSize=2;break;case d.HalfFloatType:p.getter=Te,p.inputSize=2;break}else if(p.type==2)switch(h){case d.FloatType:p.getter=d0,p.inputSize=4;break;case d.HalfFloatType:p.getter=Dt,p.inputSize=4}else throw"EXRLoader.parse: unsupported pixelType "+p.type+" for "+r.compression+".";p.blockCount=(r.dataWindow.yMax+1)/p.scanlineBlockSize;for(var T=0;T<p.blockCount;T++)C0(i,f);p.outputChannels=p.channels==3?4:p.channels;const _=p.width*p.height*p.outputChannels;switch(h){case d.FloatType:p.byteArray=new Float32Array(_),p.channels<p.outputChannels&&p.byteArray.fill(1,0,_);break;case d.HalfFloatType:p.byteArray=new Uint16Array(_),p.channels<p.outputChannels&&p.byteArray.fill(15360,0,_);break;default:console.error("THREE.EXRLoader: unsupported type: ",h);break}return p.bytesPerLine=p.width*p.inputSize*p.channels,p.outputChannels==4?p.format=d.RGBAFormat:p.format=d.RedFormat,Ce?p.colorSpace="srgb-linear":p.encoding=3e3,p}const be=new DataView(e),Bt=new Uint8Array(e),ge={value:0},we=Gt(be,e,ge),b=kt(we,be,Bt,ge,this.type),Ln={value:0},Vt={R:0,G:1,B:2,A:3,Y:0};for(let r=0;r<b.height/b.scanlineBlockSize;r++){const i=S0(be,ge);b.size=S0(be,ge),b.lines=i+b.scanlineBlockSize>b.height?b.height-i:b.scanlineBlockSize;const f=b.size<b.lines*b.bytesPerLine?b.uncompress(b):Un(b);ge.value+=b.size;for(let h=0;h<b.scanlineBlockSize;h++){const p=h+r*b.scanlineBlockSize;if(p>=b.height)break;for(let T=0;T<b.channels;T++){const _=Vt[we.channels[T].name];for(let A=0;A<b.width;A++){Ln.value=(h*(b.channels*b.width)+T*b.width+A)*b.inputSize;const R=(b.height-1-p)*(b.width*b.outputChannels)+A*b.outputChannels+_;b.byteArray[R]=b.getter(f,Ln)}}}}return{header:we,width:b.width,height:b.height,data:b.byteArray,format:b.format,[Ce?"colorSpace":"encoding"]:b[Ce?"colorSpace":"encoding"],type:this.type}}setDataType(e){return this.type=e,this}load(e,n,o,a){function c(l,v){Ce?l.colorSpace=v.colorSpace:l.encoding=v.encoding,l.minFilter=d.LinearFilter,l.magFilter=d.LinearFilter,l.generateMipmaps=!1,l.flipY=!1,n&&n(l,v)}return super.load(e,c,o,a)}}function Ti(t){var e=[];if(t.length===0)return"";if(typeof t[0]!="string")throw new TypeError("Url must be a string. Received "+t[0]);if(t[0].match(/^[^/:]+:\/*$/)&&t.length>1){var n=t.shift();t[0]=n+t[0]}t[0].match(/^file:\/\/\//)?t[0]=t[0].replace(/^([^/:]+):\/*/,"$1:///"):t[0]=t[0].replace(/^([^/:]+):\/*/,"$1://");for(var o=0;o<t.length;o++){var a=t[o];if(typeof a!="string")throw new TypeError("Url must be a string. Received "+a);a!==""&&(o>0&&(a=a.replace(/^[\/]+/,"")),o<t.length-1?a=a.replace(/[\/]+$/,""):a=a.replace(/[\/]+$/,"/"),e.push(a))}var c=e.join("/");c=c.replace(/\/(\?|&|#[^!])/g,"$1");var l=c.split("?");return c=l.shift()+(l.length>0?"?":"")+l.join("&"),c}function gi(){var t;return typeof arguments[0]=="object"?t=arguments[0]:t=[].slice.call(arguments),Ti(t)}class wi extends d.Loader{constructor(){super(...arguments),this.format="exr",this.type=d.HalfFloatType}setTypeFromRenderer(e){return this.type=e.getContext().getExtension("OES_texture_float_linear")==null?d.HalfFloatType:d.FloatType,this}load(e,n,o,a){const c={},l=(v,{loader:u,extension:E})=>{u.setRequestHeader(this.requestHeader),u.setPath(this.path),u.setWithCredentials(this.withCredentials),u.load(gi(e,`${v}${E}`),S=>{S.minFilter=d.LinearFilter,S.magFilter=d.LinearFilter,S.type=this.type,this.type===d.FloatType&&(S.image.data=new Float32Array(new D.Float16Array(S.image.data.buffer))),c[`${v}Texture`]=S,c.irradianceTexture!=null&&c.scatteringTexture!=null&&c.transmittanceTexture!=null&&n(c)},o,a)};this.format==="exr"?(l("irradiance",{loader:new Wn(this.manager),extension:".exr"}),l("scattering",{loader:new D.EXR3DLoader(this.manager).setDepth(fn),extension:".exr"}),l("transmittance",{loader:new Wn(this.manager),extension:".exr"})):(l("irradiance",{loader:D.createDataTextureLoader(D.parseFloat16Array,{width:Me,height:De}),extension:".bin"}),l("scattering",{loader:D.createData3DTextureLoader(D.parseFloat16Array,{width:Xn,height:Yn,depth:fn}),extension:".bin"}),l("transmittance",{loader:D.createDataTextureLoader(D.parseFloat16Array,{width:Ne,height:Ue}),extension:".bin"}))}}function Ri({topRadius:t,bottomRadius:e},n,o,a){const c=(n-e)/(t-e),l=o*.5+.5;return a.set(Ye(l,Me),Ye(c,De))}const Ai=1/Math.sqrt(Math.PI),un=Math.sqrt(3)/(2*Math.sqrt(Math.PI)),Ci=new d.Vector3,dn=new d.Vector3,yi=new d.Vector2,Ii=new d.Matrix4,mt={ellipsoid:D.Ellipsoid.WGS84,correctAltitude:!0,photometric:!0};class xi extends d.LightProbe{constructor(e,n=oe.DEFAULT){super(),this.atmosphere=n,this.ellipsoidCenter=new d.Vector3,this.ellipsoidMatrix=new d.Matrix4;const{irradianceTexture:o=null,ellipsoid:a,correctAltitude:c,photometric:l,sunDirection:v}={...mt,...e};this.irradianceTexture=o,this.ellipsoid=a,this.correctAltitude=c,this.photometric=l,this.sunDirection=(v==null?void 0:v.clone())??new d.Vector3}update(){if(this.irradianceTexture==null)return;const e=Ii.copy(this.ellipsoidMatrix).invert(),o=this.getWorldPosition(Ci).applyMatrix4(e).sub(this.ellipsoidCenter);if(this.correctAltitude){const S=this.ellipsoid.projectOnSurface(o,dn);S!=null&&o.sub(Qe(S,this.atmosphere.bottomRadius,this.ellipsoid,dn))}const a=o.length(),c=o.dot(this.sunDirection)/a,l=Ri(this.atmosphere,a,c,yi),v=ct(this.irradianceTexture,l,dn);this.photometric&&v.multiply(this.atmosphere.skyRadianceToRelativeLuminance);const u=this.ellipsoid.getSurfaceNormal(o).applyMatrix4(this.ellipsoidMatrix),E=this.sh.coefficients;E[0].copy(v).multiplyScalar(Ai),E[1].copy(v).multiplyScalar(un*u.y),E[2].copy(v).multiplyScalar(un*u.z),E[3].copy(v).multiplyScalar(un*u.x)}}const Mi=`precision highp float;
precision highp sampler3D;

#define RECIPROCAL_PI (0.3183098861837907)

#include "core/raySphereIntersection"
#include "parameters"
#include "functions"
#include "sky"

uniform vec3 sunDirection;
uniform vec3 moonDirection;
uniform float moonAngularRadius;
uniform float lunarRadianceScale;
uniform vec3 groundAlbedo;

#ifdef HAS_SHADOW_LENGTH
uniform sampler2D shadowLengthBuffer;
#endif // HAS_SHADOW_LENGTH

in vec2 vUv;
in vec3 vCameraPosition;
in vec3 vRayDirection;
in vec3 vEllipsoidCenter;

layout(location = 0) out vec4 outputColor;

#include <mrt_layout>

bool rayIntersectsGround(const vec3 cameraPosition, const vec3 rayDirection) {
  float r = length(cameraPosition);
  float mu = dot(cameraPosition, rayDirection) / r;
  return mu < 0.0 && r * r * (mu * mu - 1.0) + u_bottom_radius * u_bottom_radius >= 0.0;
}

void main() {
  float shadowLength = 0.0;
  #ifdef HAS_SHADOW_LENGTH
  shadowLength = texture(shadowLengthBuffer, vUv).r;
  #endif // HAS_SHADOW_LENGTH

  vec3 cameraPosition = vCameraPosition - vEllipsoidCenter;
  vec3 rayDirection = normalize(vRayDirection);

  #ifdef GROUND_ALBEDO

  bool intersectsGround = rayIntersectsGround(cameraPosition, rayDirection);
  if (intersectsGround) {
    float distanceToGround = raySphereFirstIntersection(
      cameraPosition,
      rayDirection,
      u_bottom_radius
    );
    vec3 groundPosition = rayDirection * distanceToGround + cameraPosition;
    vec3 surfaceNormal = normalize(groundPosition);
    vec3 skyIrradiance;
    vec3 sunIrradiance = GetSunAndSkyIrradiance(
      cameraPosition,
      surfaceNormal,
      sunDirection,
      skyIrradiance
    );
    vec3 transmittance;
    vec3 inscatter = GetSkyRadianceToPoint(
      cameraPosition,
      u_bottom_radius * surfaceNormal,
      shadowLength,
      sunDirection,
      transmittance
    );
    vec3 radiance = groundAlbedo * RECIPROCAL_PI * (sunIrradiance + skyIrradiance);
    outputColor.rgb = radiance * transmittance + inscatter;
  } else {
    outputColor.rgb = getSkyRadiance(
      cameraPosition,
      rayDirection,
      shadowLength,
      sunDirection,
      moonDirection,
      moonAngularRadius,
      lunarRadianceScale
    );
  }

  #else // GROUND_ALBEDO

  outputColor.rgb = getSkyRadiance(
    cameraPosition,
    rayDirection,
    shadowLength,
    sunDirection,
    moonDirection,
    moonAngularRadius,
    lunarRadianceScale
  );

  #endif // GROUND_ALBEDO

  outputColor.a = 1.0;

  #include <mrt_output>
}
`,Di=`precision highp float;
precision highp sampler3D;

#include "parameters"

uniform mat4 inverseProjectionMatrix;
uniform mat4 inverseViewMatrix;
uniform vec3 cameraPosition;
uniform vec3 ellipsoidCenter;
uniform mat4 inverseEllipsoidMatrix;
uniform vec3 altitudeCorrection;

layout(location = 0) in vec3 position;

out vec2 vUv;
out vec3 vCameraPosition;
out vec3 vRayDirection;
out vec3 vEllipsoidCenter;

void getCameraRay(out vec3 origin, out vec3 direction) {
  bool isPerspective = inverseProjectionMatrix[2][3] != 0.0; // 4th entry in the 3rd column

  if (isPerspective) {
    // Calculate the camera ray for a perspective camera.
    vec4 viewPosition = inverseProjectionMatrix * vec4(position, 1.0);
    vec4 worldDirection = inverseViewMatrix * vec4(viewPosition.xyz, 0.0);
    origin = cameraPosition;
    direction = worldDirection.xyz;
  } else {
    // Unprojected points to calculate direction.
    vec4 nearPoint = inverseProjectionMatrix * vec4(position.xy, -1.0, 1.0);
    vec4 farPoint = inverseProjectionMatrix * vec4(position.xy, -0.9, 1.0);
    nearPoint /= nearPoint.w;
    farPoint /= farPoint.w;

    // Calculate world values
    vec4 worldDirection = inverseViewMatrix * vec4(farPoint.xyz - nearPoint.xyz, 0.0);
    vec4 worldOrigin = inverseViewMatrix * nearPoint;

    // Outputs
    direction = worldDirection.xyz;
    origin = worldOrigin.xyz;
  }
}

void main() {
  vUv = position.xy * 0.5 + 0.5;

  vec3 direction, origin;
  getCameraRay(origin, direction);

  mat3 rotation = mat3(inverseEllipsoidMatrix);
  vCameraPosition = rotation * origin.xyz * METER_TO_LENGTH_UNIT;
  vRayDirection = rotation * direction.xyz;
  vEllipsoidCenter = (ellipsoidCenter + altitudeCorrection) * METER_TO_LENGTH_UNIT;

  gl_Position = vec4(position.xy, 1.0, 1.0);
}
`;var Ni=Object.defineProperty,Et=(t,e,n,o)=>{for(var a=void 0,c=t.length-1,l;c>=0;c--)(l=t[c])&&(a=l(e,n,a)||a);return a&&Ni(e,n,a),a};const St={...en,sun:!0,moon:!0,moonAngularRadius:.0045,lunarRadianceScale:1};class Nn extends nn{constructor(e){const{sun:n,moon:o,moonDirection:a,moonAngularRadius:c,lunarRadianceScale:l,groundAlbedo:v,...u}={...St,...e};super({name:"SkyMaterial",glslVersion:d.GLSL3,vertexShader:D.resolveIncludes(Di,{parameters:j0._parameters}),fragmentShader:D.resolveIncludes(Mi,{core:{raySphereIntersection:X0.raySphereIntersection},parameters:j0._parameters,functions:j0._functions,sky:jn}),...u,uniforms:{inverseProjectionMatrix:new d.Uniform(new d.Matrix4),inverseViewMatrix:new d.Uniform(new d.Matrix4),moonDirection:new d.Uniform((a==null?void 0:a.clone())??new d.Vector3),moonAngularRadius:new d.Uniform(c),lunarRadianceScale:new d.Uniform(l),groundAlbedo:new d.Uniform((v==null?void 0:v.clone())??new d.Color(0)),shadowLengthBuffer:new d.Uniform(null),...u.uniforms},defines:{PERSPECTIVE_CAMERA:"1"},depthTest:!0}),this.shadowLength=null,this.sun=n,this.moon=o}onBeforeRender(e,n,o,a,c,l){super.onBeforeRender(e,n,o,a,c,l);const{uniforms:v,defines:u}=this;v.inverseProjectionMatrix.value.copy(o.projectionMatrixInverse),v.inverseViewMatrix.value.copy(o.matrixWorld);const E=u.PERSPECTIVE_CAMERA!=null,S=o.isPerspectiveCamera===!0;S!==E&&(S?u.PERSPECTIVE_CAMERA="1":delete u.PERSPECTIVE_CAMERA,this.needsUpdate=!0);const g=this.groundAlbedo,I=u.GROUND_ALBEDO!=null,N=g.r!==0||g.g!==0||g.b!==0;N!==I&&(N?this.defines.GROUND_ALBEDO="1":delete this.defines.GROUND_ALBEDO,this.needsUpdate=!0);const O=this.shadowLength,P=u.HAS_SHADOW_LENGTH!=null,H=O!=null;H!==P&&(H?u.HAS_SHADOW_LENGTH="1":(delete u.HAS_SHADOW_LENGTH,v.shadowLengthBuffer.value=null),this.needsUpdate=!0),H&&(v.shadowLengthBuffer.value=O.map)}get moonDirection(){return this.uniforms.moonDirection.value}get moonAngularRadius(){return this.uniforms.moonAngularRadius.value}set moonAngularRadius(e){this.uniforms.moonAngularRadius.value=e}get lunarRadianceScale(){return this.uniforms.lunarRadianceScale.value}set lunarRadianceScale(e){this.uniforms.lunarRadianceScale.value=e}get groundAlbedo(){return this.uniforms.groundAlbedo.value}}Et([D.define("SUN")],Nn.prototype,"sun");Et([D.define("MOON")],Nn.prototype,"moon");class Ui extends d.BufferGeometry{constructor(e){super();const n=new Int16Array(e),o=new Uint8Array(e),a=new d.InterleavedBuffer(n,5),c=new d.InterleavedBuffer(o,10);this.setAttribute("position",new d.InterleavedBufferAttribute(a,3,0,!0)),this.setAttribute("magnitude",new d.InterleavedBufferAttribute(c,1,6,!0)),this.setAttribute("color",new d.InterleavedBufferAttribute(c,3,7,!0)),this.boundingSphere=new d.Sphere(new d.Vector3,1)}}const Oi=`precision highp float;
precision highp sampler3D;

#include "parameters"
#include "functions"

uniform vec3 sunDirection;

in vec3 vCameraPosition;
in vec3 vRayDirection;
in vec3 vEllipsoidCenter;

layout(location = 0) out vec4 outputColor;

#include <mrt_layout>

in vec3 vColor;

void main() {
  #if !defined(PERSPECTIVE_CAMERA)
  outputColor = vec4(0.0);
  discard; // Rendering celestial objects without perspective doesn't make sense.
  #endif // !defined(PERSPECTIVE_CAMERA)

  #ifdef BACKGROUND
  vec3 cameraPosition = vCameraPosition - vEllipsoidCenter;
  vec3 rayDirection = normalize(vRayDirection);
  float r = length(cameraPosition);
  float mu = dot(cameraPosition, rayDirection) / r;

  if (RayIntersectsGround(r, mu)) {
    discard;
  }

  vec3 transmittance;
  vec3 radiance = GetSkyRadiance(
    vCameraPosition - vEllipsoidCenter,
    normalize(vRayDirection),
    0.0,
    sunDirection,
    transmittance
  );
  radiance += transmittance * vColor;
  outputColor = vec4(radiance, 1.0);
  #else // BACKGROUND
  outputColor = vec4(vColor, 1.0);
  #endif // BACKGROUND

  #include <mrt_output>
}
`,Pi=`precision highp float;
precision highp sampler3D;

#include "parameters"

#define saturate(x) clamp(x, 0.0, 1.0)

uniform mat4 projectionMatrix;
uniform mat4 modelViewMatrix;
uniform mat4 viewMatrix;
uniform mat4 matrixWorld;
uniform vec3 cameraPosition;
uniform float cameraFar;
uniform vec3 ellipsoidCenter;
uniform mat4 inverseEllipsoidMatrix;
uniform vec3 altitudeCorrection;
uniform float pointSize;
uniform vec2 magnitudeRange;
uniform float radianceScale;

layout(location = 0) in vec3 position;
layout(location = 1) in float magnitude;
layout(location = 2) in vec3 color;

out vec3 vCameraPosition;
out vec3 vRayDirection;
out vec3 vEllipsoidCenter;
out vec3 vColor;

void main() {
  // Magnitude is stored between 0 to 1 within the given range.
  float m = mix(magnitudeRange.x, magnitudeRange.y, magnitude);
  vec3 v = pow(vec3(10.0), -vec3(magnitudeRange, m) / 2.5);
  vColor = vec3(radianceScale * color);
  vColor *= saturate((v.z - v.y) / (v.x - v.y));

  #ifdef BACKGROUND
  vec3 worldDirection = normalize(matrixWorld * vec4(position, 1.0)).xyz;
  mat3 rotation = mat3(inverseEllipsoidMatrix);
  vCameraPosition = rotation * cameraPosition * METER_TO_LENGTH_UNIT;
  vRayDirection = rotation * worldDirection;
  vEllipsoidCenter = (ellipsoidCenter + altitudeCorrection) * METER_TO_LENGTH_UNIT;
  gl_Position =
    projectionMatrix * viewMatrix * vec4(cameraPosition + worldDirection * cameraFar, 1.0);
  #else // BACKGROUND
  gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);
  #endif // BACKGROUND

  gl_PointSize = pointSize;
}
`;var Li=Object.defineProperty,Fi=(t,e,n,o)=>{for(var a=void 0,c=t.length-1,l;c>=0;c--)(l=t[c])&&(a=l(e,n,a)||a);return a&&Li(e,n,a),a};const _t={...en,pointSize:1,radianceScale:1,background:!0};class Tt extends nn{constructor(e){const{pointSize:n,radianceScale:o,background:a,...c}={..._t,...e};super({name:"StarsMaterial",glslVersion:d.GLSL3,vertexShader:D.resolveIncludes(Pi,{parameters:j0._parameters}),fragmentShader:D.resolveIncludes(Oi,{parameters:j0._parameters,functions:j0._functions}),...c,uniforms:{projectionMatrix:new d.Uniform(new d.Matrix4),modelViewMatrix:new d.Uniform(new d.Matrix4),viewMatrix:new d.Uniform(new d.Matrix4),matrixWorld:new d.Uniform(new d.Matrix4),cameraFar:new d.Uniform(0),pointSize:new d.Uniform(0),magnitudeRange:new d.Uniform(new d.Vector2(-2,8)),radianceScale:new d.Uniform(o),...c.uniforms},defines:{PERSPECTIVE_CAMERA:"1"}}),this.pointSize=n,this.background=a}onBeforeRender(e,n,o,a,c,l){super.onBeforeRender(e,n,o,a,c,l);const v=this.uniforms;v.projectionMatrix.value.copy(o.projectionMatrix),v.modelViewMatrix.value.copy(o.modelViewMatrix),v.viewMatrix.value.copy(o.matrixWorldInverse),v.matrixWorld.value.copy(c.matrixWorld),v.cameraFar.value=o.far,v.pointSize.value=this.pointSize*e.getPixelRatio();const u=o.isPerspectiveCamera===!0;this.defines.PERSPECTIVE_CAMERA!=null!==u&&(u?this.defines.PERSPECTIVE_CAMERA="1":delete this.defines.PERSPECTIVE_CAMERA,this.needsUpdate=!0)}get magnitudeRange(){return this.uniforms.magnitudeRange.value}get radianceScale(){return this.uniforms.radianceScale.value}set radianceScale(e){this.uniforms.radianceScale.value=e}}Fi([D.define("BACKGROUND")],Tt.prototype,"background");const bi=new d.Vector3,Hi=new d.Matrix4,gt={ellipsoid:D.Ellipsoid.WGS84,correctAltitude:!0,photometric:!0,distance:1};class zi extends d.DirectionalLight{constructor(e,n=oe.DEFAULT){super(),this.atmosphere=n,this.ellipsoidCenter=new d.Vector3,this.ellipsoidMatrix=new d.Matrix4;const{irradianceTexture:o=null,ellipsoid:a,correctAltitude:c,photometric:l,sunDirection:v,distance:u}={...gt,...e};this.transmittanceTexture=o,this.ellipsoid=a,this.correctAltitude=c,this.photometric=l,this.sunDirection=(v==null?void 0:v.clone())??new d.Vector3,this.distance=u}update(){if(this.position.copy(this.sunDirection).applyMatrix4(this.ellipsoidMatrix).normalize().multiplyScalar(this.distance).add(this.target.position),this.transmittanceTexture==null)return;const e=Hi.copy(this.ellipsoidMatrix).invert(),n=this.target.getWorldPosition(bi).applyMatrix4(e).sub(this.ellipsoidCenter);lt(this.transmittanceTexture,n,this.sunDirection,this.color,{ellipsoid:this.ellipsoid,correctAltitude:this.correctAltitude,photometric:this.photometric},this.atmosphere)}}exports.AerialPerspectiveEffect=g0;exports.AtmosphereMaterialBase=nn;exports.AtmosphereParameters=oe;exports.DEFAULT_PRECOMPUTED_TEXTURES_URL=Yt;exports.DEFAULT_STARS_DATA_URL=$t;exports.IRRADIANCE_TEXTURE_HEIGHT=De;exports.IRRADIANCE_TEXTURE_WIDTH=Me;exports.METER_TO_LENGTH_UNIT=ce;exports.PrecomputedTexturesLoader=wi;exports.SCATTERING_TEXTURE_DEPTH=fn;exports.SCATTERING_TEXTURE_HEIGHT=Yn;exports.SCATTERING_TEXTURE_MU_SIZE=qe;exports.SCATTERING_TEXTURE_MU_S_SIZE=Ke;exports.SCATTERING_TEXTURE_NU_SIZE=Je;exports.SCATTERING_TEXTURE_R_SIZE=je;exports.SCATTERING_TEXTURE_WIDTH=Xn;exports.SKY_RENDER_ORDER=Xt;exports.SkyLightProbe=xi;exports.SkyMaterial=Nn;exports.StarsGeometry=Ui;exports.StarsMaterial=Tt;exports.SunDirectionalLight=zi;exports.TRANSMITTANCE_TEXTURE_HEIGHT=Ue;exports.TRANSMITTANCE_TEXTURE_WIDTH=Ne;exports.aerialPerspectiveEffectOptionsDefaults=qn;exports.atmosphereMaterialParametersBaseDefaults=en;exports.getAltitudeCorrectionOffset=Qe;exports.getECIToECEFRotationMatrix=ot;exports.getMoonDirectionECEF=jr;exports.getMoonDirectionECI=Yr;exports.getSunDirectionECEF=$r;exports.getSunDirectionECI=Xr;exports.getSunLightColor=lt;exports.skyLightProbeParametersDefaults=mt;exports.skyMaterialParametersDefaults=St;exports.starsMaterialParametersDefaults=_t;exports.sunDirectionalLightParametersDefaults=gt;
//# sourceMappingURL=shared.cjs.map
