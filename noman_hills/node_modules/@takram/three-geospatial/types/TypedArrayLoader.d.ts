import { Loader } from 'three';
import { Class } from 'type-fest';
import { TypedArray } from './typedArray';
import { TypedArrayParser } from './typedArrayParsers';
export declare abstract class TypedArrayLoader<T extends TypedArray> extends Loader<T> {
    abstract parseTypedArray(buffer: ArrayBuffer): T;
    load(url: string, onLoad: (data: T) => void, onProgress?: (event: ProgressEvent) => void, onError?: (error: unknown) => void): void;
}
export declare function createTypedArrayLoaderClass<T extends TypedArray>(parser: TypedArrayParser<T>): Class<TypedArrayLoader<T>>;
export declare function createTypedArrayLoader<T extends TypedArray>(parser: TypedArrayParser<T>): TypedArrayLoader<T>;
