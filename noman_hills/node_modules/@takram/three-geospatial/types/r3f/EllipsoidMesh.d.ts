import { ElementProps, ThreeElement } from '@react-three/fiber';
import { Mesh } from 'three';
import { EllipsoidGeometry } from '../EllipsoidGeometry';
declare module '@react-three/fiber' {
    interface ThreeElements {
        ellipsoidGeometry: ThreeElement<typeof EllipsoidGeometry>;
    }
}
export interface EllipsoidMeshProps extends Omit<ElementProps<typeof Mesh>, 'args'> {
    args?: ConstructorParameters<typeof EllipsoidGeometry>;
}
export declare const EllipsoidMesh: import('react').ForwardRefExoticComponent<Omit<EllipsoidMeshProps, "ref"> & import('react').RefAttributes<Mesh<import('three').BufferGeometry<import('three').NormalBufferAttributes>, import('three').Material | import('three').Material[], import('three').Object3DEventMap>>>;
